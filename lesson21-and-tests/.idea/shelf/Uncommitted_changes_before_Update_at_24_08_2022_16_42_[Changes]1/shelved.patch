Index: ../course_work4-dev/course_work4-dev/requirements.txt
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/requirements.txt b/../course_work4-dev/course_work4-dev/requirements.txt
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/requirements.txt	
+++ /dev/null	
@@ -1,44 +0,0 @@
-aniso8601==9.0.1
-attrs==21.4.0
-certifi==2022.6.15
-cffi==1.15.1
-charset-normalizer==2.1.0
-click==8.1.3
-colorama==0.4.5
-cors==1.0.1
-cryptography==37.0.4
-filelock==3.7.1
-Flask==2.1.3
-Flask-Cors==3.0.10
-flask-marshmallow==0.14.0
-flask-restx==0.5.1
-Flask-SQLAlchemy==2.5.1
-future==0.18.2
-gevent==21.12.0
-greenlet==1.1.2
-idna==3.3
-importlib-metadata==4.12.0
-importlib-resources==5.8.0
-itsdangerous==2.1.2
-Jinja2==3.1.2
-jsonschema==4.7.2
-jwt==1.3.1
-MarkupSafe==2.1.1
-marshmallow==3.17.0
-packaging==21.3
-pycparser==2.21
-PyJWT==2.4.0
-pyparsing==3.0.9
-pyrsistent==0.18.1
-PySocks==1.7.1
-pytz==2022.1
-requests==2.28.1
-requests-file==1.5.1
-six==1.16.0
-SQLAlchemy==1.4.39
-tldextract==3.3.1
-urllib3==1.26.10
-Werkzeug==2.1.2
-zipp==3.8.1
-zope.event==4.5.0
-zope.interface==5.4.0
Index: ../Home_work_SQL_2/.idea/modules.xml
===================================================================
diff --git a/../Home_work_SQL_2/.idea/modules.xml b/../Home_work_SQL_2/.idea/modules.xml
deleted file mode 100644
--- a/../Home_work_SQL_2/.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Home_work_SQL_2.iml" filepath="$PROJECT_DIR$/.idea/Home_work_SQL_2.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/dao/genre.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/genre.py b/../course_work4-dev/course_work4-dev/app/dao/genre.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/genre.py	
+++ /dev/null	
@@ -1,23 +0,0 @@
-from app.dao.models.genre import Genre
-from constants import PAGE_LIMIT
-
-
-class GenreDAO:
-    def __init__(self, session):
-        self.session = session
-
-    def get_all(self, page_num=None):
-        if page_num:
-            offset_rec = (int(page_num) - 1) * PAGE_LIMIT
-            page_limit = PAGE_LIMIT
-        else:
-            offset_rec = None
-            page_limit = None
-
-        return self.session.query(Genre).order_by(Genre.id).offset(offset_rec).limit(page_limit).all()
-
-    def get_one(self, gid):
-        return self.session.query(Genre).get(gid)
-
-
-
Index: ../lesson12_project_source_v3-master/posts.json
===================================================================
diff --git a/../lesson12_project_source_v3-master/posts.json b/../lesson12_project_source_v3-master/posts.json
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/posts.json	
+++ /dev/null	
@@ -1,34 +0,0 @@
-[
-  {
-    "pic": "https://images.unsplash.com/photo-1525351326368-efbb5cb6814d?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80",
-    "content": "Ага, опять еда! Квадратная тарелка в квадратном кадре. А на тарелке, наверное, #пирог! Мне было так жаль, что я не могу ее съесть. Я боялась, что они заметят, и если я не съем это, то, значит, они все подумают, что я плохая девочка... Но потом мне вспомнилось, как они на меня смотрели. Когда я была маленькой, на кухне всегда были родители, бабушка, дедушка, дядя Борис... Все вместе. И всегда одна я, потому что все остальные приходили туда лишь изредка. Мне казалось, если бы все ходили на работу, как и я, в этот свой офис, было бы совсем неинтересно."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1592660716763-09efba6db4e3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80",
-    "content": "Вышел #погулять днем, пока все на работе. На улице странные штуки, похожие на колонны, которые кто-то сгрыз – незаметно и аккуратно, так, что даже мусора не осталось. И еще много странного: например, почему-то все птицы летают, как птицы, и, похоже, им это совершенно не мешает. Или вот еще: в траве – как будто следы от чьих-то ног, хотя вроде бы я ходил довольно тихо... На следующий день было совсем пусто. Я вышел #гулять и почувствовал себя очень одиноко. Пошел к остановке. Вокруг было много народу – и все одинаковые. Как будто все они приехали сюда из одного дома и вышли на этом перекрестке после работы, чтобы не возвращаться в свои квартиры."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1612450632008-22c2a5437dc1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=580&q=80",
-    "content": "Смотрите-ка – ржавые #елки! Раньше на этом месте была свалка старых машин, а потом все засыпали песком. Теперь тут ничего не растет – только ржавые елки , кусты и грязь. Да и не может тут ничего расти: слишком много пыли и песка. Зато теперь стало очень #красиво – все-таки это не свалка."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1581235854265-41981cb85c88?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=880&q=80",
-    "content": "Утром проснулся раньше всех – вижу у бассейна на вешалке висит оранжевое пальто. О, думаю – как это мое пальто за мной забралось так далеко – за целых 5000 километров. Присмотрелся – а это зонтик. И как только успел его сюда притащить! За завтраком сижу напротив своего попутчика, и все не решаюсь спросить его: «Может быть, мы все-таки не попутчики? Может, нам надо разъехаться в разные стороны? Вы не боитесь, что я сейчас сбегу?». Он не боится. Он вообще ничего не боится, кроме одного – когда у него в машине не работает сигнализация. А если она не работает, то он садится в машину и продолжает #гулять своим путем."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1570427968906-5a309bfd7de3?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=880&q=80",
-    "content": "Пурр-пурр! типичная инстарамная фотка с котом , книжкой и едой. Но не буду скрывать, что это я: а то вдруг у вас кот тоже такой, тогда вы не увидите этого в своих фото. #кот #котики #инста #инстаграм #любовькживотным #любимыйкот ... Как же я люблю этот момент, когда ты понимаешь, что ты ничего толком не умеешь делать и даже не знаешь, что с этим делать."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1482112252853-a77ee8d9a8cc?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=867&q=80",
-    "content": "Вот обычная лампочка, которая может стать для тебя новым смыслом жизни."
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1494548162494-384bba4ab999?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=880&q=80",
-    "content": "Очень красивый закат. Стоило выбраться из дома, чтобы посмотреть на него! а где ты был?"
-  },
-  {
-    "pic": "https://images.unsplash.com/photo-1494952200529-3ceb822a75e2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=880&q=80",
-    "content": "Утром отправились на катере обследовать ближайшие острова – острова в основном каменные, бесполезные и необитаемые. На обратном пути попали в бурю, и нас чуть не унесло в океан. В течение 10 минут наш катер несся к отмели, а потом мы стали дрейфовать между скал, держась за трос. Наконец погода наладилась и мы смогли совершить обратный путь. Когда уже прибыли домой, я попросил, чтобы на следующий день нам устроили на катере экскурсию по морю. Нас провели по морскому дну от одного острова к другому, показали различные интересные объекты, которые встречаются в этом районе."
-  }
-]
Index: ../course_work4-dev/course_work4-dev/.gitignore
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/.gitignore b/../course_work4-dev/course_work4-dev/.gitignore
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/.gitignore	
+++ /dev/null	
@@ -1,131 +0,0 @@
-# Byte-compiled / optimized / DLL files
-__pycache__/
-*.py[cod]
-*$py.class
-
-# C extensions
-*.so
-
-# Distribution / packaging
-.Python
-build/
-develop-eggs/
-dist/
-downloads/
-eggs/
-.eggs/
-lib/
-lib64/
-parts/
-sdist/
-var/
-wheels/
-pip-wheel-metadata/
-share/python-wheels/
-*.egg-info/
-.installed.cfg
-*.egg
-MANIFEST
-
-# PyInstaller
-#  Usually these files are written by a python script from a template
-#  before PyInstaller builds the exe, so as to inject date/other infos into it.
-*.manifest
-*.spec
-
-# Installer logs
-pip-log.txt
-pip-delete-this-directory.txt
-
-# Unit test / coverage reports
-htmlcov/
-.tox/
-.nox/
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.py,cover
-.hypothesis/
-.pytest_cache/
-
-# Translations
-*.mo
-*.pot
-
-# Django stuff:
-*.log
-local_settings.py
-db.sqlite3
-db.sqlite3-journal
-
-# Flask stuff:
-instance/
-.webassets-cache
-
-# Scrapy stuff:
-.scrapy
-
-# Sphinx documentation
-docs/_build/
-
-# PyBuilder
-target/
-
-# Jupyter Notebook
-.ipynb_checkpoints
-
-# IPython
-profile_default/
-ipython_config.py
-
-# pyenv
-.python-version
-
-# pipenv
-#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
-#   However, in case of collaboration, if having platform-specific dependencies or dependencies
-#   having no cross-platform support, pipenv may install dependencies that don't work, or not
-#   install all needed dependencies.
-#Pipfile.lock
-
-# PEP 582; used by e.g. github.com/David-OConnor/pyflow
-__pypackages__/
-
-# Celery stuff
-celerybeat-schedule
-celerybeat.pid
-
-# SageMath parsed files
-*.sage.py
-
-# Environments
-.env
-.venv
-env/
-venv/
-ENV/
-env.bak/
-venv.bak/
-
-# Spyder project settings
-.spyderproject
-.spyproject
-
-# Rope project settings
-.ropeproject
-
-# mkdocs documentation
-/site
-
-# mypy
-.mypy_cache/
-.dmypy.json
-dmypy.json
-
-# Pyre type checker
-.pyre/
-/.vscode/
-/.idea/
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/main/utils.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/main/utils.py b/../lesson12_project_source_v3-master/main/utils.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/main/utils.py	
+++ /dev/null	
@@ -1,16 +0,0 @@
-import json
-from exceptions import *
-
-def load_json_data(path):
-    try:
-        with open(path, "r", encoding="UTF-8") as file:
-            return json.load(file)
-    except (FileNotFoundError, json.JSONDecodeError):
-        raise DataJsonError
-
-def search_post_by_substring(posts,substring):
-    posts_founded = []
-    for post in posts:
-        if substring.lower() in post["content"].lower():
-            posts_founded.append(post)
-    return posts_founded
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/views/movies.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/movies.py b/../course_work4-dev/course_work4-dev/app/views/movies.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/movies.py	
+++ /dev/null	
@@ -1,27 +0,0 @@
-from flask_restx import Resource, Namespace
-from implemented import movie_service, movie_schema, movies_schema
-from flask import request
-
-
-movie_ns = Namespace('movies')
-
-
-
-@movie_ns.route('/')
-class MoviesView(Resource):
-    def get(self):
-        page_num = request.args.get('page', None)
-        director = request.args.get('director', None)
-        genre = request.args.get('genre', None)
-        status = request.args.get('status', None)
-        movies = movie_service.get_all(page_num, director, genre, status)
-        return movies_schema.dump(movies), 200
-
-
-@movie_ns.route('/<int:mid>/')
-class MoviesView(Resource):
-    def get(self, mid):
-        movie = movie_service.get_one(mid)
-        return movie_schema.dump(movie), 200
-
-
Index: ../lesson12_project_source_v3-master/README.md
===================================================================
diff --git a/../lesson12_project_source_v3-master/README.md b/../lesson12_project_source_v3-master/README.md
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/README.md	
+++ /dev/null	
@@ -1,3 +0,0 @@
-## Исходный код для проекта урока 12
-
-Склонируйте репозиторий себе, затем выполните задание.
Index: ../course_work4-dev/course_work4-dev/app/views/genres.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/genres.py b/../course_work4-dev/course_work4-dev/app/views/genres.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/genres.py	
+++ /dev/null	
@@ -1,22 +0,0 @@
-from flask import request
-from flask_restx import Resource, Namespace, api
-
-from implemented import genre_service, genres_schema, genre_schema
-
-
-genre_ns = Namespace('genres')
-
-
-@genre_ns.route('/')
-class GenresView(Resource):
-    def get(self):
-        page_num = request.args.get('page', None)
-        genres = genre_service.get_all(page_num)
-        return genres_schema.dump(genres), 200
-
-
-@genre_ns.route('/<int:gid>/')
-class GenreView(Resource):
-    def get(self, gid):
-        genre = genre_service.get_one(gid)
-        return genre_schema.dump(genre), 200
Index: ../course_work4-dev/course_work4-dev/main.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/main.py b/../course_work4-dev/course_work4-dev/main.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/main.py	
+++ /dev/null	
@@ -1,48 +0,0 @@
-from flask import Flask
-from flask_restx import Api
-from config import Config
-from app.views.directors import director_ns
-from app.views.genres import genre_ns
-from app.views.movies import movie_ns
-from app.views.favourite_movie import favourite_ns
-from app.views.auth import auth_ns
-from app.views.user import user_ns
-from setup_db import db
-from flask_cors import CORS
-
-cors = CORS()
-
-
-def create_app(config: Config):
-    application = Flask(__name__)
-    application.config.from_object(config)
-    application.app_context().push()
-    cors.init_app(application)
-    register_extensions(application)
-    return application
-
-
-def register_extensions(app):
-    api = Api(app)
-    api.add_namespace(director_ns)
-    api.add_namespace(genre_ns)
-    api.add_namespace(movie_ns)
-    api.add_namespace(auth_ns)
-    api.add_namespace(user_ns)
-    api.add_namespace(favourite_ns)
-    db.init_app(app)
-
-
-def create_db():
-    db.create_all()
-
-
-
-app_config = Config()
-app = create_app(app_config)
-
-
-if __name__ == '__main__':
-    app.run()
-    create_db()
-
Index: ../course_work4-dev/course_work4-dev/app/services/auth.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/auth.py b/../course_work4-dev/course_work4-dev/app/services/auth.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/auth.py	
+++ /dev/null	
@@ -1,91 +0,0 @@
-import hmac
-import base64
-import jwt
-import calendar
-import datetime
-
-from flask_restx import abort
-
-from app.dao.user import UserDAO
-from hashlib import pbkdf2_hmac
-from constants import PWD_SALT, PWD_ITERATIONS, JWT_SECRET, JWT_ALGORITHM
-
-
-class AuthService:
-    def __init__(self, dao: UserDAO):
-        self.dao = dao
-
-    def register_user(self, user_data):
-        email = user_data.get('email')
-        password = user_data.get('password')
-        if not email:
-            return "email not entered"
-
-        if not password:
-            return "password not entered"
-        result = self.verify_user(email)
-        if result:
-            return "user already exists"
-
-        user_data['password'] = self.get_hash(password)
-        return self.dao.create(user_data)
-
-    def verify_user(self, email):
-        return self.dao.get_by_email(email)
-
-    def get_hash(self, password):
-        hash_digest = pbkdf2_hmac(
-            'sha256',
-            password.encode('utf-8'),
-            PWD_SALT,
-            PWD_ITERATIONS
-        )
-        return base64.b64encode(hash_digest)
-
-    def compare_passwords(self, password_hashed, password) -> bool:
-        digest_decoded = base64.b64decode(password_hashed)
-        digest_hashed = pbkdf2_hmac('sha256',
-                                password.encode('utf-8'),
-                                PWD_SALT,
-                                PWD_ITERATIONS)
-
-        return hmac.compare_digest(digest_decoded, digest_hashed)
-
-    def genereate_token(self, email, password, is_refresh=False):
-        user = self.dao.get_by_email(email)
-        if not user:
-            abort(400)
-            # return "user not found"
-
-        if not is_refresh:
-            if not self.compare_passwords(user.password, password):
-                abort(400)
-
-        data = {
-            "id": user.id,
-            "email": email
-        }
-        min30 = datetime.datetime.now() + datetime.timedelta(minutes=30)
-        data['exp'] = calendar.timegm(min30.timetuple())
-        access_token = jwt.encode(data, JWT_SECRET, algorithm=JWT_ALGORITHM)
-
-        days130 = datetime.datetime.now() + datetime.timedelta(days=130)
-        data['exp'] = calendar.timegm(days130.timetuple())
-        refresh_token = jwt.encode(data, JWT_SECRET, algorithm=JWT_ALGORITHM)
-
-        return {
-            'access_token': access_token,
-            'refresh_token': refresh_token
-        }
-
-    # def check_token(self, token):
-    #     try:
-    #         jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
-    #         return True
-    #     except Exception:
-    #         return False
-
-    def approve_refresh_token(self, token):
-        data = jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
-        email = data['email']
-        return self.genereate_token(email, None, is_refresh=True)
Index: ../lesson12_project_source_v3-master/.idea/vcs.xml
===================================================================
diff --git a/../lesson12_project_source_v3-master/.idea/vcs.xml b/../lesson12_project_source_v3-master/.idea/vcs.xml
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.idea/vcs.xml	
+++ /dev/null	
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/../coursework2_source_18.05.2022" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/services/movie.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/movie.py b/../course_work4-dev/course_work4-dev/app/services/movie.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/movie.py	
+++ /dev/null	
@@ -1,12 +0,0 @@
-from app.dao.movie import MovieDAO
-
-
-class MovieService:
-    def __init__(self, dao: MovieDAO):
-        self.dao = dao
-
-    def get_all(self, page_num, director, genre, status):
-        return self.dao.get_all(page_num, director, genre, status)
-
-    def get_one(self, mid):
-        return self.dao.get_one(mid)
Index: ../Home_work_SQL_2/app/__init__.py
===================================================================
diff --git a/../Home_work_SQL_2/app/__init__.py b/../Home_work_SQL_2/app/__init__.py
deleted file mode 100644
--- a/../Home_work_SQL_2/app/__init__.py	
+++ /dev/null	
@@ -1,26 +0,0 @@
-from flask import Flask
-from flask_sqlalchemy import SQLAlchemy
-
-db = SQLAlchemy()
-
-
-def create_app():
-    app = Flask(__name__)
-    app.config.from_object('config.Config')
-
-    db.init_app(app)
-
-    with app.app_context():
-
-        from app import routes
-
-        db.create_all()
-
-        from app import migrate
-
-        migrate.migrate_user_roles(app.config['USER_ROLES_FIXTURE_PATH'])
-        migrate.migrate_users(app.config['USERS_FIXTURE_PATH'])
-        migrate.migrate_orders(app.config['ORDERS_FIXTURE_PATH'])
-        migrate.migrate_offers(app.config['OFFERS_FIXTURE_PATH'])
-
-        return app
Index: ../lesson12_project_source_v3-master/.idea/misc.xml
===================================================================
diff --git a/../lesson12_project_source_v3-master/.idea/misc.xml b/../lesson12_project_source_v3-master/.idea/misc.xml
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.idea/misc.xml	
+++ /dev/null	
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
-  <component name="PyCharmProfessionalAdvertiser">
-    <option name="shown" value="true" />
-  </component>
-</project>
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/views/favourite_movie.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/favourite_movie.py b/../course_work4-dev/course_work4-dev/app/views/favourite_movie.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/favourite_movie.py	
+++ /dev/null	
@@ -1,40 +0,0 @@
-from flask_restx import Resource, Namespace
-from flask import request, jsonify
-from implemented import user_service, movie_service, favourite_service
-from setup_db import db
-
-
-favourite_ns = Namespace('favorites')
-
-
-@favourite_ns.route('/movies/')
-class FavouriteMovies(Resource):
-    def get(self):
-        user_id = user_service.get_id_by_token(request.headers)
-        favourite_movies = favourite_service.get_by_id(user_id)
-        fm = []
-        for item in favourite_movies:
-            dict_ = {"id": item[0]}
-            fm.append(dict_)
-        return jsonify(fm)
-
-
-@favourite_ns.route('/movies/<int:movie_id>/')
-class FavouriteMovie(Resource):
-    def post(self, movie_id):
-        user_id = user_service.get_id_by_token(request.headers)
-        user = user_service.get_one(user_id)
-        movie = movie_service.get_one(movie_id)
-        user.movies.append(movie)
-        db.session.add(user)
-        db.session.commit()
-        return "", 201
-
-    def delete(self, movie_id):
-        user_id = user_service.get_id_by_token(request.headers)
-        user = user_service.get_one(user_id)
-        movie = movie_service.get_one(movie_id)
-        user.movies.remove(movie)
-        db.session.add(user)
-        db.session.commit()
-        return "", 200
Index: ../Home_work_SQL_2/app/migrate.py
===================================================================
diff --git a/../Home_work_SQL_2/app/migrate.py b/../Home_work_SQL_2/app/migrate.py
deleted file mode 100644
--- a/../Home_work_SQL_2/app/migrate.py	
+++ /dev/null	
@@ -1,68 +0,0 @@
-import json
-import os
-import re
-from datetime import datetime
-
-from app import db, models
-
-DATE_PATTERN = re.compile(r'\d{2}/\d{2}/\d{4}')
-
-
-def load_fixture(file_path):
-    """ загружаут содержимое фикстуры
-    :param file_path: пусть до файла с фикстурой
-    :retrun: данные из фикстуры либо пустой список, если не найдены
-
-    """
-    content = []
-    if os.path.isfile(file_path):
-        with open(file_path) as file:
-            content = json.load(file)
-
-    return content
-
-
-def migration(fixture_path, model, convert_dates=False):
-    fixture_content = load_fixture(fixture_path)
-    # конвертация дат из формата
-
-    for fixture in fixture_content:
-
-        if convert_dates:
-            for field_name, field_value in fixture.items():
-                if isinstance(field_value, str) and field_value.count('/') == 2:
-                    fixture[field_name] = datetime.strptime(field_value, '%m/%d/%Y')
-
-        if db.session.query(model).filter(model.id == fixture['id']).first() is None:
-            db.session.add(model(**fixture))
-
-    db.session.commit()
-
-
-def migrate_user_roles(fixture_path):
-    migration(
-        fixture_path=fixture_path,
-        model=models.UserRole,
-    )
-
-
-def migrate_users(fixture_path):
-    migration(
-        fixture_path=fixture_path,
-        model=models.User,
-    )
-
-
-def migrate_orders(fixture_path):
-    migration(
-        fixture_path=fixture_path,
-        model=models.Order,
-        convert_dates=True,
-    )
-
-
-def migrate_offers(fixture_path):
-    migration(
-        fixture_path=fixture_path,
-        model=models.Offer,
-    )
Index: ../Home_work_SQL_2/app/routes.py
===================================================================
diff --git a/../Home_work_SQL_2/app/routes.py b/../Home_work_SQL_2/app/routes.py
deleted file mode 100644
--- a/../Home_work_SQL_2/app/routes.py	
+++ /dev/null	
@@ -1,98 +0,0 @@
-from flask import request
-from app import models, db
-
-from flask import current_app as app, jsonify, abort
-
-
-@app.route('/users', methods=['GET'])
-def get_users():
-    """ Возвращает список пользователей """
-    users = db.session.query(models.User).all()
-
-    return jsonify([user.serialize() for user in users])
-
-
-@app.route('/users/<int:user_id>', methods=['GET'])
-def get_user(user_id):
-    """ Возвращает список пользователей по ID """
-    user = db.session.query(models.User).filter(models.User.id == user_id).first()
-
-    if user is None:
-        abort(404)
-
-    return jsonify(user.serialize())
-
-
-@app.route('/orders', methods=['GET'])
-def get_orders():
-    """ Возвращает список заказов """
-    orders = db.session.query(models.Order).all()
-
-    return jsonify([order.serialize() for order in orders])
-
-
-@app.route('/orders/<int:order_id>', methods=['GET'])
-def get_order(order_id):
-    """ Возвращает список заказов по ID"""
-    order = db.session.query(models.Order).filter(models.Order.id == order_id).first()
-
-    if order is None:
-        abort(404)
-
-    return jsonify(order.serialize())
-
-
-@app.route('/offers', methods=['GET'])
-def get_offers():
-    """ Возвращает список предложений """
-    offers = db.session.query(models.Offer).all()
-
-    return jsonify([offer.serialize() for offer in offers])
-
-
-@app.route('/offers/<int:order_id>', methods=['GET'])
-def get_offer(order_id):
-    """ Возвращает предложения по ID """
-    offer = db.session.query(models.Offer).filter(models.Offer.id == order_id).first()
-
-    if offer is None:
-        abort(404)
-
-    return jsonify(offer.serialize())
-
-
-@app.route('/users', methods=['POST'])
-def create_user():
-    data = request.json
-
-    db.session.add(models.User(**data))
-
-    db.session.commit()
-
-    return {}
-
-@app.route('/users/<int:user_id>', methods=['PUT'])
-def edit_user(user_id):
-    data = request.json
-
-    user = db.session.query(models.User).filter(models.User == user_id).first()
-    if user is None:
-        abort(404)
-
-    db.session.query(models.User).filter(models.User.id == user_id).update(**data)
-    db.session.commit()
-
-    return {}
-
-
-@app.route('/users/<int:user_id>', methods=['DELETE'])
-def delete_user(user_id):
-
-    result = db.session.query(models.User).filter(models.User.id == user_id).delete()
-
-    if result == 0:
-        abort(404)
-
-    db.session.commit()
-
-    return {}
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/dao/user.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/user.py b/../course_work4-dev/course_work4-dev/app/dao/user.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/user.py	
+++ /dev/null	
@@ -1,52 +0,0 @@
-from app.dao.models.user import User
-from constants import PAGE_LIMIT
-
-
-class UserDAO:
-    def __init__(self, session):
-        self.session = session
-
-    def get_all(self, page_num=None):
-        if page_num:
-            offset_rec = (int(page_num) - 1) * PAGE_LIMIT
-            page_limit = PAGE_LIMIT
-        else:
-            offset_rec = None
-            page_limit = None
-
-        return self.session.query(User).order_by(User.id).offset(offset_rec).limit(page_limit).all()
-
-    def get_one(self, uid):
-        return self.session.query(User).get(uid)
-
-    def get_by_email(self, email):
-        try:
-            user = self.session.query(User).filter(User.email == email.strip()).one()
-            return user
-        except Exception:
-            return False
-
-    def create(self, user_data):
-        user = User(**user_data)
-        self.session.add(user)
-        self.session.commit()
-        return user
-
-    def patch(self, uid, user_data):
-        user = self.get_one(uid)
-        if not user:
-            return False
-        if user_data.get('name'):
-            user.name = user_data.get('name')
-        if user_data.get('surname'):
-            user.surname = user_data.get('surname')
-        if user_data.get('favourite_genre'):
-            user.favourite_genre = user_data.get('favourite_genre')
-
-        self.session.add(user)
-        self.session.commit()
-        return user
-
-    def put(self, user):
-        self.session.add(user)
-        self.session.commit()
Index: ../course_work4-dev/course_work4-dev/app/views/auth.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/auth.py b/../course_work4-dev/course_work4-dev/app/views/auth.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/auth.py	
+++ /dev/null	
@@ -1,41 +0,0 @@
-from flask_restx import Namespace, Resource
-from flask import request
-from implemented import auth_service
-
-
-auth_ns = Namespace('auth')
-
-
-@auth_ns.route('/register/')
-class AuthRegisterView(Resource):
-    def post(self):
-        user_data = request.json
-        email = user_data.get('email')
-        if ('@' not in email) or ('.' not in email):
-            return "invalid email", 400
-        user = auth_service.register_user(user_data)
-        if user == 'user already exists':
-            return "Такой пользователь уже существует", 400
-        if user == 'email not entered':
-            return "Email не задан", 400
-        if user == 'password not entered':
-            return "Пароль не задан", 400
-
-        return "", 201
-
-
-@auth_ns.route('/login/')
-class AuthLoginView(Resource):
-    def post(self):
-        user_data = request.json
-        email = user_data.get('email')
-        password = user_data.get('password')
-        if None in [email, password]:
-            return "Не введен логин или пароль", 400
-
-        return auth_service.genereate_token(email, password)
-
-    def put(self):
-        data = request.json
-        token = data.get('refresh_token')
-        return auth_service.approve_refresh_token(token)
Index: ../course_work4-dev/course_work4-dev/app/dao/models/genre.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/genre.py b/../course_work4-dev/course_work4-dev/app/dao/models/genre.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/models/genre.py	
+++ /dev/null	
@@ -1,16 +0,0 @@
-from marshmallow import Schema, fields
-from sqlalchemy.orm import relationship
-from setup_db import db
-
-
-class Genre(db.Model):
-    __tablename__ = 'genre'
-    id = db.Column(db.Integer, primary_key=True)
-    name = db.Column(db.String, unique=True, nullable=False)
-
-
-
-class GenreSchema(Schema):
-    id = fields.Int()
-    name = fields.Str()
-    movies = relationship('Movie')
Index: ../course_work4-dev/course_work4-dev/setup_db.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/setup_db.py b/../course_work4-dev/course_work4-dev/setup_db.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/setup_db.py	
+++ /dev/null	
@@ -1,5 +0,0 @@
-from flask_sqlalchemy import SQLAlchemy
-
-
-db = SQLAlchemy()
-
Index: ../lesson12_project_source_v3-master/loader/templates/post_form.html
===================================================================
diff --git a/../lesson12_project_source_v3-master/loader/templates/post_form.html b/../lesson12_project_source_v3-master/loader/templates/post_form.html
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/loader/templates/post_form.html	
+++ /dev/null	
@@ -1,33 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <title>Добавить пост</title>
-    <link rel="stylesheet" href="../static/style.css">
-</head>
-<body>
-<main>
-
-    <a href="/" class="link">Назад</a>
-
-    <h1>Добавить пост</h1>
-
-    <form action="/post" method="POST" enctype="multipart/form-data">
-        <p>Картинка к посту</p>
-        <div>
-            <input type="file" name="picture">
-        </div>
-        <p>Текст к посту</p>
-        <div>
-            <textarea name="content" rows="5" ></textarea>
-        </div>
-
-        <div>
-            <input type="submit" value="Добавить" class="button">
-        </div>
-    </form>
-
-
-</main>
-</body>
-</html>
Index: ../Home_work_SQL_2/config.py
===================================================================
diff --git a/../Home_work_SQL_2/config.py b/../Home_work_SQL_2/config.py
deleted file mode 100644
--- a/../Home_work_SQL_2/config.py	
+++ /dev/null	
@@ -1,17 +0,0 @@
-import os.path
-
-DATABASE_FILE_PATH = os.path.join(os.getcwd(), 'test.db')
-FIXTURE_BASE_DIR = 'fixtures'
-
-
-
-class Config:
-    # Настройки ORM
-    SQLALCHEMY_DATABASE_URI = f'sqlite:///{DATABASE_FILE_PATH}'
-    SQLALCHEMY_TRACK_MODIFICATIONS = False
-
-    # Фикстуры
-    USER_ROLES_FIXTURE_PATH = os.path.join(FIXTURE_BASE_DIR, 'user_roles.json')
-    USERS_FIXTURE_PATH = os.path.join(FIXTURE_BASE_DIR, 'users.json')
-    ORDERS_FIXTURE_PATH = os.path.join(FIXTURE_BASE_DIR, 'orders.json')
-    OFFERS_FIXTURE_PATH = os.path.join(FIXTURE_BASE_DIR, 'offers.json')
Index: ../lesson12_project_source_v3-master/app.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/app.py b/../lesson12_project_source_v3-master/app.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/app.py	
+++ /dev/null	
@@ -1,18 +0,0 @@
-from flask import Flask, request, render_template, send_from_directory
-from main.views import main_blueprint
-from loader.views import loader_blueprint
-
-
-app = Flask(__name__)
-
-app.register_blueprint(main_blueprint)
-app.register_blueprint(loader_blueprint)
-
-
-@app.route("/uploads/<path:path>")
-def static_dir(path):
-    return send_from_directory("uploads", path)
-
-if __name__ == "__main__":
-   app.run()
-
Index: ../Home_work_SQL_2/fixtures/orders.json
===================================================================
diff --git a/../Home_work_SQL_2/fixtures/orders.json b/../Home_work_SQL_2/fixtures/orders.json
deleted file mode 100644
--- a/../Home_work_SQL_2/fixtures/orders.json	
+++ /dev/null	
@@ -1,552 +0,0 @@
-[
-  {
-    "id": 1,
-    "name": "Позвать в гости девушку",
-    "description": "Позвать в гости девушку и шикануть перед ней — заказать коробку конфет с доставкой на дом",
-    "start_date": "01/24/2016",
-    "end_date": "03/10/2076",
-    "address": "9387 Grimes Green Apt. 801\nPagetown, NM 44165",
-    "price": 2800,
-    "customer_id": 18,
-    "executor_id": 25
-  },
-  {
-    "id": 2,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "04/19/2008",
-    "end_date": "05/23/2099",
-    "address": "93328 Davis Island\nRodriguezside, VT 16860",
-    "price": 2320,
-    "customer_id": 16,
-    "executor_id": 19
-  },
-  {
-    "id": 3,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "08/17/2018",
-    "end_date": "04/15/2045",
-    "address": "894 Davis Union\nStewartbury, HI 25324",
-    "price": 3427,
-    "customer_id": 24,
-    "executor_id": 25
-  },
-  {
-    "id": 4,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "05/09/2006",
-    "end_date": "06/27/2004",
-    "address": "1122 Megan Squares Suite 848\nPort Jason, OR 55475",
-    "price": 5184,
-    "customer_id": 15,
-    "executor_id": 5
-  },
-  {
-    "id": 5,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "09/22/2019",
-    "end_date": "06/15/2037",
-    "address": "59179 Bruce Gardens Apt. 413\nLauramouth, AR 13687",
-    "price": 7378,
-    "customer_id": 6,
-    "executor_id": 28
-  },
-  {
-    "id": 6,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "12/23/2004",
-    "end_date": "12/14/2094",
-    "address": "13991 Davis Village\nNorth Catherineborough, VT 16740",
-    "price": 401,
-    "customer_id": 25,
-    "executor_id": 7
-  },
-  {
-    "id": 7,
-    "name": "Позвать в гости девушку",
-    "description": "Позвать в гости девушку и шикануть перед ней — заказать коробку конфет с доставкой на дом",
-    "start_date": "04/21/2016",
-    "end_date": "08/28/2028",
-    "address": "086 Mary Cliff\nNorth Deborah, NE 24135",
-    "price": 4556,
-    "customer_id": 18,
-    "executor_id": 27
-  },
-  {
-    "id": 8,
-    "name": "Встретить тетю на вокзале",
-    "description": "Встретить тетю на вокзале с табличкой. Отвезти ее в магазин, помочь погрузить покупки. Привезти тетю домой, занести покупки и чемодан в квартиру",
-    "start_date": "01/28/2002",
-    "end_date": "07/17/2068",
-    "address": "634 Strong Mountains\nLake Emily, AR 89132",
-    "price": 4633,
-    "customer_id": 15,
-    "executor_id": 11
-  },
-  {
-    "id": 9,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "05/20/2005",
-    "end_date": "01/15/2022",
-    "address": "97207 Mccullough Well Suite 564\nNew Hannah, WA 10865",
-    "price": 6466,
-    "customer_id": 5,
-    "executor_id": 11
-  },
-  {
-    "id": 10,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "06/06/2011",
-    "end_date": "03/21/2006",
-    "address": "75945 Jennifer Loaf\nPooleland, PA 25707",
-    "price": 491,
-    "customer_id": 3,
-    "executor_id": 18
-  },
-  {
-    "id": 11,
-    "name": "Позвать в гости девушку",
-    "description": "Позвать в гости девушку и шикануть перед ней — заказать коробку конфет с доставкой на дом",
-    "start_date": "05/18/2011",
-    "end_date": "10/14/2021",
-    "address": "9606 Barton Station Apt. 271\nJacquelinemouth, NM 74085",
-    "price": 3355,
-    "customer_id": 5,
-    "executor_id": 11
-  },
-  {
-    "id": 12,
-    "name": "Встретить тетю на вокзале",
-    "description": "Встретить тетю на вокзале с табличкой. Отвезти ее в магазин, помочь погрузить покупки. Привезти тетю домой, занести покупки и чемодан в квартиру",
-    "start_date": "07/19/2020",
-    "end_date": "01/04/2000",
-    "address": "4706 Amy Roads Apt. 206\nStewartborough, VT 99428",
-    "price": 1845,
-    "customer_id": 16,
-    "executor_id": 7
-  },
-  {
-    "id": 13,
-    "name": "Два раза в день",
-    "description": "Два раза в день гулять с собакой, пока хозяева уехали путешествовать",
-    "start_date": "01/30/2000",
-    "end_date": "12/21/2091",
-    "address": "19344 Craig Walk\nBurtontown, NV 15676",
-    "price": 3944,
-    "customer_id": 6,
-    "executor_id": 24
-  },
-  {
-    "id": 14,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "09/22/2008",
-    "end_date": "02/27/2018",
-    "address": "24000 Erin Point Suite 590\nJosephmouth, NE 49318",
-    "price": 1360,
-    "customer_id": 16,
-    "executor_id": 27
-  },
-  {
-    "id": 15,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "04/21/2018",
-    "end_date": "04/06/2024",
-    "address": "22455 Higgins Junction Apt. 042\nNew Keith, OH 17493",
-    "price": 950,
-    "customer_id": 25,
-    "executor_id": 8
-  },
-  {
-    "id": 16,
-    "name": "Нужно забрать пакет с",
-    "description": "Нужно забрать пакет с документами c Черняховского, 4а и отвезти его на Плющиху, 20",
-    "start_date": "12/25/2009",
-    "end_date": "08/21/2015",
-    "address": "42814 Houston Hills\nRodriguezside, NJ 62629",
-    "price": 1124,
-    "customer_id": 5,
-    "executor_id": 17
-  },
-  {
-    "id": 17,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "06/21/2011",
-    "end_date": "10/09/2046",
-    "address": "760 Rogers Spur\nEast Courtney, SC 11894",
-    "price": 5450,
-    "customer_id": 3,
-    "executor_id": 5
-  },
-  {
-    "id": 18,
-    "name": "Два раза в день",
-    "description": "Два раза в день гулять с собакой, пока хозяева уехали путешествовать",
-    "start_date": "03/29/2002",
-    "end_date": "07/10/2011",
-    "address": "60168 West Overpass\nSouth Christopher, KS 77208",
-    "price": 747,
-    "customer_id": 2,
-    "executor_id": 12
-  },
-  {
-    "id": 19,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "09/01/2005",
-    "end_date": "09/09/2058",
-    "address": "08731 Sanders Fords\nPort Jasonberg, ID 60585",
-    "price": 8229,
-    "customer_id": 6,
-    "executor_id": 10
-  },
-  {
-    "id": 20,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "11/11/2012",
-    "end_date": "03/21/2049",
-    "address": "97296 Rich Park\nMarthafort, TN 26976",
-    "price": 2447,
-    "customer_id": 15,
-    "executor_id": 14
-  },
-  {
-    "id": 21,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "06/20/2018",
-    "end_date": "12/27/2082",
-    "address": "USS Peterson\nFPO AP 42215",
-    "price": 4161,
-    "customer_id": 18,
-    "executor_id": 16
-  },
-  {
-    "id": 22,
-    "name": "Нужно забрать пакет с",
-    "description": "Нужно забрать пакет с документами c Черняховского, 4а и отвезти его на Плющиху, 20",
-    "start_date": "12/13/2010",
-    "end_date": "10/29/2004",
-    "address": "269 Robbins Valley Suite 118\nNorth Jeffreyton, AL 59298",
-    "price": 6285,
-    "customer_id": 5,
-    "executor_id": 8
-  },
-  {
-    "id": 23,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "04/01/2011",
-    "end_date": "11/13/2021",
-    "address": "8688 Audrey Springs Apt. 634\nPetersenfort, WY 51431",
-    "price": 7101,
-    "customer_id": 18,
-    "executor_id": 1
-  },
-  {
-    "id": 24,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "08/31/2020",
-    "end_date": "10/22/2079",
-    "address": "024 Cook Park\nSherriport, MT 50853",
-    "price": 7132,
-    "customer_id": 14,
-    "executor_id": 25
-  },
-  {
-    "id": 25,
-    "name": "Встретить тетю на вокзале",
-    "description": "Встретить тетю на вокзале с табличкой. Отвезти ее в магазин, помочь погрузить покупки. Привезти тетю домой, занести покупки и чемодан в квартиру",
-    "start_date": "01/20/2013",
-    "end_date": "06/21/2008",
-    "address": "45007 Thomas Way\nLake Hollystad, AZ 80687",
-    "price": 2397,
-    "customer_id": 16,
-    "executor_id": 3
-  },
-  {
-    "id": 26,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "11/12/2015",
-    "end_date": "08/17/2052",
-    "address": "2009 Crystal Cove\nJamesfort, AR 80470",
-    "price": 6684,
-    "customer_id": 14,
-    "executor_id": 16
-  },
-  {
-    "id": 27,
-    "name": "Позвать в гости девушку",
-    "description": "Позвать в гости девушку и шикануть перед ней — заказать коробку конфет с доставкой на дом",
-    "start_date": "11/24/2015",
-    "end_date": "08/11/2083",
-    "address": "194 Susan Loaf Suite 183\nPort Philipstad, ID 60200",
-    "price": 3058,
-    "customer_id": 24,
-    "executor_id": 20
-  },
-  {
-    "id": 28,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "02/18/2012",
-    "end_date": "01/06/2086",
-    "address": "74089 Jerry Trail\nHunterville, NE 74689",
-    "price": 4786,
-    "customer_id": 16,
-    "executor_id": 15
-  },
-  {
-    "id": 29,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "05/12/2014",
-    "end_date": "06/09/2011",
-    "address": "USCGC Brown\nFPO AA 20968",
-    "price": 4765,
-    "customer_id": 25,
-    "executor_id": 8
-  },
-  {
-    "id": 30,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "01/16/2001",
-    "end_date": "10/18/2060",
-    "address": "75415 David Square Apt. 552\nPort Terristad, PA 19282",
-    "price": 2930,
-    "customer_id": 6,
-    "executor_id": 12
-  },
-  {
-    "id": 31,
-    "name": "Два раза в день",
-    "description": "Два раза в день гулять с собакой, пока хозяева уехали путешествовать",
-    "start_date": "01/28/2007",
-    "end_date": "06/09/2000",
-    "address": "045 Sarah Fort\nEast Shawn, MI 93231",
-    "price": 3397,
-    "customer_id": 18,
-    "executor_id": 22
-  },
-  {
-    "id": 32,
-    "name": "Нужно забрать пакет с",
-    "description": "Нужно забрать пакет с документами c Черняховского, 4а и отвезти его на Плющиху, 20",
-    "start_date": "10/14/2008",
-    "end_date": "09/18/2017",
-    "address": "5744 White Common\nNew Beverlyburgh, FL 16915",
-    "price": 236,
-    "customer_id": 2,
-    "executor_id": 8
-  },
-  {
-    "id": 33,
-    "name": "Встретить тетю на вокзале",
-    "description": "Встретить тетю на вокзале с табличкой. Отвезти ее в магазин, помочь погрузить покупки. Привезти тетю домой, занести покупки и чемодан в квартиру",
-    "start_date": "08/01/2007",
-    "end_date": "12/29/2042",
-    "address": "45602 Phillip Squares\nEast Robertside, WA 19150",
-    "price": 4174,
-    "customer_id": 14,
-    "executor_id": 19
-  },
-  {
-    "id": 34,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "02/10/2020",
-    "end_date": "06/17/2057",
-    "address": "37580 Ortiz Mall Suite 735\nStephanieland, WY 14737",
-    "price": 1642,
-    "customer_id": 2,
-    "executor_id": 20
-  },
-  {
-    "id": 35,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "06/04/2009",
-    "end_date": "04/07/2015",
-    "address": "762 Reynolds Gateway\nPetersonhaven, MI 61113",
-    "price": 2511,
-    "customer_id": 25,
-    "executor_id": 23
-  },
-  {
-    "id": 36,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "06/27/2021",
-    "end_date": "09/26/2086",
-    "address": "0797 Jeffery Crescent\nAmyberg, VT 98982",
-    "price": 7372,
-    "customer_id": 2,
-    "executor_id": 23
-  },
-  {
-    "id": 37,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "01/15/2016",
-    "end_date": "08/05/2012",
-    "address": "640 Joseph Skyway\nNorth Jonathanhaven, OR 93557",
-    "price": 5894,
-    "customer_id": 16,
-    "executor_id": 14
-  },
-  {
-    "id": 38,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "06/25/2013",
-    "end_date": "07/04/2060",
-    "address": "4391 Chad Greens Suite 851\nPort Frank, LA 37561",
-    "price": 9671,
-    "customer_id": 14,
-    "executor_id": 4
-  },
-  {
-    "id": 39,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "09/08/2017",
-    "end_date": "04/18/2018",
-    "address": "168 Figueroa Turnpike\nKellystad, SC 18564",
-    "price": 7209,
-    "customer_id": 14,
-    "executor_id": 11
-  },
-  {
-    "id": 40,
-    "name": "Два раза в день",
-    "description": "Два раза в день гулять с собакой, пока хозяева уехали путешествовать",
-    "start_date": "05/05/2005",
-    "end_date": "10/12/2016",
-    "address": "9728 Gomez Mountains Suite 377\nTrevorton, ME 19219",
-    "price": 4798,
-    "customer_id": 18,
-    "executor_id": 12
-  },
-  {
-    "id": 41,
-    "name": "Вынести на помойку старый",
-    "description": "Вынести на помойку старый шкаф. Отвезти книжки в библиотеку, отдать ненужную одежду в пункт приема",
-    "start_date": "11/10/2016",
-    "end_date": "02/18/2007",
-    "address": "57608 Gloria Common\nSmithton, RI 00991",
-    "price": 6716,
-    "customer_id": 6,
-    "executor_id": 3
-  },
-  {
-    "id": 42,
-    "name": "Нужно забрать пакет с",
-    "description": "Нужно забрать пакет с документами c Черняховского, 4а и отвезти его на Плющиху, 20",
-    "start_date": "03/13/2009",
-    "end_date": "02/26/2087",
-    "address": "94316 Moran Lights\nWest Robert, TX 57552",
-    "price": 2570,
-    "customer_id": 18,
-    "executor_id": 24
-  },
-  {
-    "id": 43,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "01/13/2005",
-    "end_date": "11/16/2060",
-    "address": "USNS Warren\nFPO AE 27877",
-    "price": 3666,
-    "customer_id": 2,
-    "executor_id": 16
-  },
-  {
-    "id": 44,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "05/10/2006",
-    "end_date": "06/11/2060",
-    "address": "7633 Bentley Radial Apt. 603\nPort Jacobton, SC 89301",
-    "price": 4354,
-    "customer_id": 25,
-    "executor_id": 12
-  },
-  {
-    "id": 45,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "11/24/2005",
-    "end_date": "09/20/2031",
-    "address": "845 Ellis Roads\nCarpenterfort, VT 62845",
-    "price": 6590,
-    "customer_id": 24,
-    "executor_id": 16
-  },
-  {
-    "id": 46,
-    "name": "Организовать переезд: упаковать вещи",
-    "description": "Организовать переезд: упаковать вещи в коробки, погрузить, перевезти на машине, разгрузить и расставить всё по местам",
-    "start_date": "05/01/2007",
-    "end_date": "11/22/2045",
-    "address": "25040 Bryce Meadow\nNew Randy, IN 59968",
-    "price": 3135,
-    "customer_id": 25,
-    "executor_id": 18
-  },
-  {
-    "id": 47,
-    "name": "Сделать уборку в квартире:",
-    "description": "Сделать уборку в квартире: помыть пол и протереть пыль, помыть посуду, погладить одежду и развесить ее в шкафу",
-    "start_date": "07/24/2006",
-    "end_date": "03/16/2046",
-    "address": "5875 Johnson Cape\nWest Christopher, NC 45818",
-    "price": 3544,
-    "customer_id": 15,
-    "executor_id": 20
-  },
-  {
-    "id": 48,
-    "name": "Требуется уборка квартиры. Площадь",
-    "description": "Требуется уборка квартиры. Площадь 85 м²: спальня, детская, гостиная, кухня. Санузел раздельный. Фотографии прикладываю.",
-    "start_date": "05/22/2006",
-    "end_date": "06/10/2027",
-    "address": "8647 Wiggins Garden Apt. 481\nSouth Tylermouth, MT 65195",
-    "price": 4712,
-    "customer_id": 24,
-    "executor_id": 12
-  },
-  {
-    "id": 49,
-    "name": "Сделать разом мелкий ремонт:",
-    "description": "Сделать разом мелкий ремонт: повесить полочку в ванной, заклеить щели в окнах, починить выпадающую розетку, смазать дверные петли",
-    "start_date": "09/02/2015",
-    "end_date": "11/24/2059",
-    "address": "12637 Lisa Points\nWilliamsburgh, NM 29343",
-    "price": 8490,
-    "customer_id": 24,
-    "executor_id": 30
-  },
-  {
-    "id": 50,
-    "name": "Встретить тетю на вокзале",
-    "description": "Встретить тетю на вокзале с табличкой. Отвезти ее в магазин, помочь погрузить покупки. Привезти тетю домой, занести покупки и чемодан в квартиру",
-    "start_date": "02/08/2013",
-    "end_date": "03/28/2057",
-    "address": "4759 William Haven Apt. 194\nWest Corey, TX 43780",
-    "price": 5512,
-    "customer_id": 3,
-    "executor_id": 6
-  }
-]
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/views/directors.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/directors.py b/../course_work4-dev/course_work4-dev/app/views/directors.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/directors.py	
+++ /dev/null	
@@ -1,21 +0,0 @@
-from flask import request
-from flask_restx import Resource, Namespace
-from implemented import director_service, directors_schema, director_schema
-
-
-director_ns = Namespace('directors')
-
-
-@director_ns.route('/')
-class DirectorsView(Resource):
-    def get(self):
-        page_num = request.args.get('page', None)
-        directors = director_service.get_all(page_num)
-        return directors_schema.dump(directors), 200
-
-
-@director_ns.route('/<int:did>/')
-class DirectorView(Resource):
-    def get(self, did):
-        director = director_service.get_one(did)
-        return director_schema.dump(director), 200
Index: ../course_work4-dev/course_work4-dev/config.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/config.py b/../course_work4-dev/course_work4-dev/config.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/config.py	
+++ /dev/null	
@@ -1,8 +0,0 @@
-class Config(object):
-    DEBUG = True
-    SQLALCHEMY_DATABASE_URI = 'sqlite:///movies.db'
-    SQLALCHEMY_TRACK_MODIFICATIONS = False
-    RESTX_JSON = {'ensure_ascii': False, 'indent': 2}
-    SECRET = '3CVDx#4cvs'
-    ALGORITHM = ''
-
Index: ../course_work4-dev/course_work4-dev/app/dao/director.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/director.py b/../course_work4-dev/course_work4-dev/app/dao/director.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/director.py	
+++ /dev/null	
@@ -1,20 +0,0 @@
-from app.dao.models.director import Director
-from constants import PAGE_LIMIT
-
-
-class DirectorDAO:
-    def __init__(self, session):
-        self.session = session
-
-    def get_all(self, page_num=None):
-        if page_num:
-            offset_rec = (int(page_num) - 1) * PAGE_LIMIT
-            page_limit = PAGE_LIMIT
-        else:
-            offset_rec = None
-            page_limit = None
-
-        return self.session.query(Director).order_by(Director.id).offset(offset_rec).limit(page_limit).all()
-
-    def get_one(self, did):
-        return self.session.query(Director).get(did)
Index: ../lesson12_project_source_v3-master/.idea/.gitignore
===================================================================
diff --git a/../lesson12_project_source_v3-master/.idea/.gitignore b/../lesson12_project_source_v3-master/.idea/.gitignore
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: ../course_work4-dev/course_work4-dev/constants.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/constants.py b/../course_work4-dev/course_work4-dev/constants.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/constants.py	
+++ /dev/null	
@@ -1,5 +0,0 @@
-PWD_SALT = b"Strong coffee"
-PWD_ITERATIONS = 100000
-PAGE_LIMIT = 12
-JWT_SECRET = 'weCqwe223SCXa'
-JWT_ALGORITHM = 'HS256'
Index: ../course_work4-dev/course_work4-dev/implemented.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/implemented.py b/../course_work4-dev/course_work4-dev/implemented.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/implemented.py	
+++ /dev/null	
@@ -1,47 +0,0 @@
-from setup_db import db
-
-from app.dao.director import DirectorDAO
-from app.services.director import DirectorService
-from app.dao.models.director import DirectorSchema
-
-from app.dao.genre import GenreDAO
-from app.services.genre import GenreService
-from app.dao.models.genre import GenreSchema
-
-from app.dao.movie import MovieDAO
-from app.services.movie import MovieService
-from app.dao.models.movie import MovieSchema
-
-from app.dao.user import UserDAO
-from app.dao.models.user import UserSchema
-from app.services.user import UserService
-
-from app.services.auth import AuthService
-
-from app.services.favourite_movie import FavouriteService
-from app.dao.models.user_movie_rel import FavouriteSchema
-
-director_dao = DirectorDAO(db.session)
-director_service = DirectorService(dao=director_dao)
-directors_schema = DirectorSchema(many=True)
-director_schema = DirectorSchema()
-
-genre_dao = GenreDAO(db.session)
-genre_service = GenreService(dao=genre_dao)
-genres_schema = GenreSchema(many=True)
-genre_schema = GenreSchema()
-
-movie_dao = MovieDAO(db.session)
-movie_service = MovieService(dao=movie_dao)
-movies_schema = MovieSchema(many=True)
-movie_schema = MovieSchema()
-
-user_dao = UserDAO(db.session)
-user_service = UserService(dao=user_dao)
-users_schema = UserSchema(many=True)
-user_schema = UserSchema()
-
-auth_service = AuthService(dao=user_dao)
-
-favourite_service = FavouriteService()
-favourite_schema = FavouriteSchema(many=True)
Index: ../course_work4-dev/course_work4-dev/app/services/genre.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/genre.py b/../course_work4-dev/course_work4-dev/app/services/genre.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/genre.py	
+++ /dev/null	
@@ -1,12 +0,0 @@
-from app.dao.genre import GenreDAO
-
-
-class GenreService:
-    def __init__(self, dao: GenreDAO):
-        self.dao = dao
-
-    def get_all(self, page_num):
-        return self.dao.get_all(page_num)
-
-    def get_one(self, gid):
-        return self.dao.get_one(gid)
Index: ../lesson12_project_source_v3-master/loader/templates/post_uploaded.html
===================================================================
diff --git a/../lesson12_project_source_v3-master/loader/templates/post_uploaded.html b/../lesson12_project_source_v3-master/loader/templates/post_uploaded.html
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/loader/templates/post_uploaded.html	
+++ /dev/null	
@@ -1,27 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <title>Пост добавлен</title>
-    <link rel="stylesheet" href="../static/style.css">
-</head>
-<body>
-<main>
-
-    <a href="/post" class="link">Назад</a>
-
-    <h1>Пост добавлен! </h1>
-
-    <div class="post">
-        <img src="{{ new_post.pic }}"
-             width="100%" alt="">
-        <p>{{ new_post.content }}</p>
-    </div>
-
-    <hr>
-
-    <a href="/post" class="button">Добавить еще пост</a>
-
-</main>
-</body>
-</html>
Index: ../lesson12_project_source_v3-master/.idea/modules.xml
===================================================================
diff --git a/../lesson12_project_source_v3-master/.idea/modules.xml b/../lesson12_project_source_v3-master/.idea/modules.xml
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.idea/modules.xml	
+++ /dev/null	
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/../coursework2_source_18.05.2022/.idea/coursework2_source1.iml" filepath="$PROJECT_DIR$/../coursework2_source_18.05.2022/.idea/coursework2_source1.iml" />
-      <module fileurl="file://$PROJECT_DIR$/.idea/lesson12_project_source_v3-master.iml" filepath="$PROJECT_DIR$/.idea/lesson12_project_source_v3-master.iml" />
-      <module fileurl="file://$PROJECT_DIR$/../pythonProject2/.idea/pythonProject2.iml" filepath="$PROJECT_DIR$/../pythonProject2/.idea/pythonProject2.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/main/views.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/main/views.py b/../lesson12_project_source_v3-master/main/views.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/main/views.py	
+++ /dev/null	
@@ -1,26 +0,0 @@
-from flask import Blueprint, render_template, request
-import logging
-from main.utils import *
-from config import POST_PATH
-
-main_blueprint = Blueprint("main_blueprint", __name__, template_folder="templates")
-
-logging.basicConfig(filename="logger.log", level=logging.INFO)
-
-
-@main_blueprint.route("/")
-def main_page():
-    logging.info("Открытие главной страницы")
-    return render_template("index.html")
-
-@main_blueprint.route("/search")
-def search_page():
-    s = request.args.get("s","")
-    logging.info("Выполняется поиск")
-    posts = load_json_data(POST_PATH)
-    filtered_posts = search_post_by_substring(posts, s)
-    return render_template("post_list.html", posts=filtered_posts, s=s)
-
-
-
-
Index: ../Home_work_SQL_2/fixtures/user_roles.json
===================================================================
diff --git a/../Home_work_SQL_2/fixtures/user_roles.json b/../Home_work_SQL_2/fixtures/user_roles.json
deleted file mode 100644
--- a/../Home_work_SQL_2/fixtures/user_roles.json	
+++ /dev/null	
@@ -1,10 +0,0 @@
-[
-  {
-    "id": 1,
-    "name": "executor"
-  },
-  {
-    "id": 2,
-    "name": "customer"
-  }
-  ]
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/loader/utils.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/loader/utils.py b/../lesson12_project_source_v3-master/loader/utils.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/loader/utils.py	
+++ /dev/null	
@@ -1,20 +0,0 @@
-import json
-
-from config import UPLOAD_FOLDER, POST_PATH
-from exceptions import WrongImgType
-
-def save_picture(picture):
-    allowed_type = ["jpg", "png", "gif", "jpeg"]
-    picture_type = picture.filename.split(".")[-1]
-    if picture_type not in allowed_type:
-        raise WrongImgType(f"Невеный формат! Допустим только {', '.join(allowed_type)}")
-    picture_path = f'{UPLOAD_FOLDER}/{picture.filename}'
-    picture.save(picture_path)
-
-    return picture_path
-
-
-def add_post(post_list, post):
-    post_list.append(post)
-    with open(POST_PATH, 'w', encoding='utf-8') as file:
-        json.dump(post_list, file)
Index: ../course_work4-dev/course_work4-dev/app/dao/models/movie.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/movie.py b/../course_work4-dev/course_work4-dev/app/dao/models/movie.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/models/movie.py	
+++ /dev/null	
@@ -1,42 +0,0 @@
-from app.dao.models.director import DirectorSchema
-from app.dao.models.genre import GenreSchema
-from setup_db import db
-from sqlalchemy.orm import relationship
-from marshmallow import Schema, fields
-from app.dao.models.user_movie_rel import user_movie_table
-
-
-class Movie(db.Model):
-    __tablename__ = 'movie'
-    id = db.Column(db.Integer, primary_key=True)
-    title = db.Column(db.String, nullable=False)
-    description = db.Column(db.String, nullable=False)
-    trailer = db.Column(db.String, nullable=False)
-    year = db.Column(db.Integer, nullable=False)
-    rating = db.Column(db.Float, nullable=False)
-    genre_id = db.Column(db.Integer, db.ForeignKey('genre.id'), nullable=False)
-    genre = relationship('Genre')
-    director_id = db.Column(db.Integer, db.ForeignKey('director.id'), nullable=False)
-    director = relationship('Director')
-    users = relationship('User', secondary=user_movie_table, back_populates='movies')
-
-
-# class MovieSchema(Schema):
-#     id = fields.Int()
-#     title = fields.Str()
-#     description = fields.Str()
-#     trailer = fields.Str()
-#     year = fields.Int()
-#     rating = fields.Float()
-#     genre_id = fields.Int()
-#     director_id = fields.Int()
-
-class MovieSchema(Schema):
-    id = fields.Int()
-    title = fields.Str()
-    description = fields.Str()
-    trailer = fields.Str()
-    year = fields.Int()
-    rating = fields.Float()
-    genre = fields.Nested(GenreSchema)
-    director = fields.Nested(DirectorSchema)
Index: ../course_work4-dev/course_work4-dev/app/dao/models/user_movie_rel.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/user_movie_rel.py b/../course_work4-dev/course_work4-dev/app/dao/models/user_movie_rel.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/models/user_movie_rel.py	
+++ /dev/null	
@@ -1,15 +0,0 @@
-from marshmallow import Schema, fields
-
-from setup_db import db
-
-
-user_movie_table = db.Table(
-    "user_movie_rel",
-    db.Column("user_id", db.ForeignKey("user.id")),
-    db.Column("movie_id", db.ForeignKey("movie.id"))
-)
-
-
-class FavouriteSchema(Schema):
-    user_id = fields.Int()
-    movie_id = fields.Int()
Index: ../course_work4-dev/course_work4-dev/app/dao/models/user.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/user.py b/../course_work4-dev/course_work4-dev/app/dao/models/user.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/models/user.py	
+++ /dev/null	
@@ -1,25 +0,0 @@
-from setup_db import db
-from sqlalchemy.orm import relationship
-from marshmallow import Schema, fields
-from app.dao.models.user_movie_rel import user_movie_table
-from app.dao.models.user_movie_rel import FavouriteSchema
-
-class User(db.Model):
-    __tablename__ = 'user'
-    id = db.Column(db.Integer, primary_key=True, nullable=False)
-    email = db.Column(db.String, unique=True, nullable=False)
-    password = db.Column(db.String, nullable=False)
-    name = db.Column(db.String)
-    surname = db.Column(db.String)
-    favourite_genre = db.Column(db.Integer, db.ForeignKey('genre.id'))
-    movies = relationship('Movie', secondary=user_movie_table, back_populates='users')
-
-
-class UserSchema(Schema):
-    id = fields.Int()
-    email = fields.Str()
-    password = fields.Str()
-    name = fields.Str()
-    surname = fields.Str()
-    favourite_genre = fields.Int()
-    movies = fields.Nested(FavouriteSchema)
Index: ../Home_work_SQL_2/fixtures/offers.json
===================================================================
diff --git a/../Home_work_SQL_2/fixtures/offers.json b/../Home_work_SQL_2/fixtures/offers.json
deleted file mode 100644
--- a/../Home_work_SQL_2/fixtures/offers.json	
+++ /dev/null	
@@ -1,352 +0,0 @@
-[
-  {
-    "id": 1,
-    "order_id": 35,
-    "executor_id": 4
-  },
-  {
-    "id": 2,
-    "order_id": 35,
-    "executor_id": 21
-  },
-  {
-    "id": 3,
-    "order_id": 47,
-    "executor_id": 28
-  },
-  {
-    "id": 4,
-    "order_id": 18,
-    "executor_id": 25
-  },
-  {
-    "id": 5,
-    "order_id": 22,
-    "executor_id": 25
-  },
-  {
-    "id": 6,
-    "order_id": 11,
-    "executor_id": 11
-  },
-  {
-    "id": 7,
-    "order_id": 10,
-    "executor_id": 20
-  },
-  {
-    "id": 8,
-    "order_id": 18,
-    "executor_id": 12
-  },
-  {
-    "id": 9,
-    "order_id": 36,
-    "executor_id": 1
-  },
-  {
-    "id": 10,
-    "order_id": 20,
-    "executor_id": 7
-  },
-  {
-    "id": 11,
-    "order_id": 43,
-    "executor_id": 8
-  },
-  {
-    "id": 12,
-    "order_id": 37,
-    "executor_id": 28
-  },
-  {
-    "id": 13,
-    "order_id": 37,
-    "executor_id": 8
-  },
-  {
-    "id": 14,
-    "order_id": 24,
-    "executor_id": 1
-  },
-  {
-    "id": 15,
-    "order_id": 18,
-    "executor_id": 8
-  },
-  {
-    "id": 16,
-    "order_id": 28,
-    "executor_id": 11
-  },
-  {
-    "id": 17,
-    "order_id": 23,
-    "executor_id": 25
-  },
-  {
-    "id": 18,
-    "order_id": 19,
-    "executor_id": 12
-  },
-  {
-    "id": 19,
-    "order_id": 34,
-    "executor_id": 22
-  },
-  {
-    "id": 20,
-    "order_id": 18,
-    "executor_id": 20
-  },
-  {
-    "id": 21,
-    "order_id": 17,
-    "executor_id": 9
-  },
-  {
-    "id": 22,
-    "order_id": 20,
-    "executor_id": 28
-  },
-  {
-    "id": 23,
-    "order_id": 1,
-    "executor_id": 4
-  },
-  {
-    "id": 24,
-    "order_id": 6,
-    "executor_id": 23
-  },
-  {
-    "id": 25,
-    "order_id": 47,
-    "executor_id": 23
-  },
-  {
-    "id": 26,
-    "order_id": 29,
-    "executor_id": 22
-  },
-  {
-    "id": 27,
-    "order_id": 5,
-    "executor_id": 13
-  },
-  {
-    "id": 28,
-    "order_id": 43,
-    "executor_id": 20
-  },
-  {
-    "id": 29,
-    "order_id": 33,
-    "executor_id": 19
-  },
-  {
-    "id": 30,
-    "order_id": 48,
-    "executor_id": 28
-  },
-  {
-    "id": 31,
-    "order_id": 42,
-    "executor_id": 1
-  },
-  {
-    "id": 32,
-    "order_id": 41,
-    "executor_id": 10
-  },
-  {
-    "id": 33,
-    "order_id": 9,
-    "executor_id": 21
-  },
-  {
-    "id": 34,
-    "order_id": 2,
-    "executor_id": 25
-  },
-  {
-    "id": 35,
-    "order_id": 25,
-    "executor_id": 28
-  },
-  {
-    "id": 36,
-    "order_id": 30,
-    "executor_id": 13
-  },
-  {
-    "id": 37,
-    "order_id": 1,
-    "executor_id": 9
-  },
-  {
-    "id": 38,
-    "order_id": 47,
-    "executor_id": 21
-  },
-  {
-    "id": 39,
-    "order_id": 40,
-    "executor_id": 8
-  },
-  {
-    "id": 40,
-    "order_id": 23,
-    "executor_id": 23
-  },
-  {
-    "id": 41,
-    "order_id": 18,
-    "executor_id": 20
-  },
-  {
-    "id": 42,
-    "order_id": 11,
-    "executor_id": 23
-  },
-  {
-    "id": 43,
-    "order_id": 18,
-    "executor_id": 9
-  },
-  {
-    "id": 44,
-    "order_id": 38,
-    "executor_id": 11
-  },
-  {
-    "id": 45,
-    "order_id": 27,
-    "executor_id": 7
-  },
-  {
-    "id": 46,
-    "order_id": 3,
-    "executor_id": 19
-  },
-  {
-    "id": 47,
-    "order_id": 13,
-    "executor_id": 13
-  },
-  {
-    "id": 48,
-    "order_id": 36,
-    "executor_id": 7
-  },
-  {
-    "id": 49,
-    "order_id": 50,
-    "executor_id": 13
-  },
-  {
-    "id": 50,
-    "order_id": 33,
-    "executor_id": 28
-  },
-  {
-    "id": 51,
-    "order_id": 29,
-    "executor_id": 27
-  },
-  {
-    "id": 52,
-    "order_id": 48,
-    "executor_id": 17
-  },
-  {
-    "id": 53,
-    "order_id": 33,
-    "executor_id": 22
-  },
-  {
-    "id": 54,
-    "order_id": 18,
-    "executor_id": 22
-  },
-  {
-    "id": 55,
-    "order_id": 8,
-    "executor_id": 11
-  },
-  {
-    "id": 56,
-    "order_id": 8,
-    "executor_id": 7
-  },
-  {
-    "id": 57,
-    "order_id": 43,
-    "executor_id": 11
-  },
-  {
-    "id": 58,
-    "order_id": 25,
-    "executor_id": 1
-  },
-  {
-    "id": 59,
-    "order_id": 45,
-    "executor_id": 28
-  },
-  {
-    "id": 60,
-    "order_id": 10,
-    "executor_id": 28
-  },
-  {
-    "id": 61,
-    "order_id": 35,
-    "executor_id": 26
-  },
-  {
-    "id": 62,
-    "order_id": 25,
-    "executor_id": 28
-  },
-  {
-    "id": 63,
-    "order_id": 18,
-    "executor_id": 17
-  },
-  {
-    "id": 64,
-    "order_id": 48,
-    "executor_id": 8
-  },
-  {
-    "id": 65,
-    "order_id": 40,
-    "executor_id": 17
-  },
-  {
-    "id": 66,
-    "order_id": 47,
-    "executor_id": 19
-  },
-  {
-    "id": 67,
-    "order_id": 13,
-    "executor_id": 11
-  },
-  {
-    "id": 68,
-    "order_id": 46,
-    "executor_id": 27
-  },
-  {
-    "id": 69,
-    "order_id": 45,
-    "executor_id": 28
-  },
-  {
-    "id": 70,
-    "order_id": 36,
-    "executor_id": 10
-  }
-]
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/dao/models/director.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/director.py b/../course_work4-dev/course_work4-dev/app/dao/models/director.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/models/director.py	
+++ /dev/null	
@@ -1,15 +0,0 @@
-from setup_db import db
-from marshmallow import Schema, fields
-from sqlalchemy.orm import relationship
-
-
-class Director(db.Model):
-    __tablename__ = 'director'
-    id = db.Column(db.Integer, primary_key=True)
-    name = db.Column(db.String, unique=True, nullable=False)
-
-
-class DirectorSchema(Schema):
-    id = fields.Int()
-    name = fields.Str()
-    movies = relationship('Movie')
Index: ../course_work4-dev/course_work4-dev/app/views/user.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/views/user.py b/../course_work4-dev/course_work4-dev/app/views/user.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/views/user.py	
+++ /dev/null	
@@ -1,56 +0,0 @@
-import jwt
-from flask_restx import Namespace, Resource
-from implemented import user_service, user_schema
-from flask import request, abort
-from constants import JWT_SECRET, JWT_ALGORITHM
-
-
-user_ns = Namespace('user')
-
-
-def auth_required(func):
-    def wrapper(*args, **kwargs):
-        if 'Authorization' not in request.headers:
-            abort(401)
-        data = request.headers['Authorization']
-        token = data.split('Bearer ')[-1]
-        try:
-            jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
-        except Exception:
-            abort(401)
-        return func(*args, **kwargs)
-
-    return wrapper
-
-
-@user_ns.route('/')
-class UserView(Resource):
-    @auth_required
-    def get(self):
-        uid = user_service.get_id_by_token(request.headers)
-        user = user_service.get_one(uid)
-        if user:
-            return user_schema.dump(user), 200
-        else:
-            return "Пользователь не найден", 404
-
-    @auth_required
-    def patch(self):
-        user_data = request.json
-        uid = user_service.get_id_by_token(request.headers)
-        result = user_service.patch(uid, user_data)
-        if not result:
-            return "Пользователь не найден", 404
-
-        return "Данные пользователя обновлены", 204
-
-
-@user_ns.route('/password/')
-class UserUpdateView(Resource):
-    @auth_required
-    def put(self):
-        user_data = request.json
-        uid = user_service.get_id_by_token(request.headers)
-        user_service.put(uid, user_data)
-
-
Index: ../Home_work_SQL_2/.idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/../Home_work_SQL_2/.idea/inspectionProfiles/profiles_settings.xml b/../Home_work_SQL_2/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/../Home_work_SQL_2/.idea/inspectionProfiles/profiles_settings.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/services/director.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/director.py b/../course_work4-dev/course_work4-dev/app/services/director.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/director.py	
+++ /dev/null	
@@ -1,12 +0,0 @@
-from app.dao.director import DirectorDAO
-
-
-class DirectorService:
-    def __init__(self, dao: DirectorDAO):
-        self.dao = dao
-
-    def get_all(self, page_num):
-        return self.dao.get_all(page_num)
-
-    def get_one(self, did):
-        return self.dao.get_one(did)
Index: ../course_work4-dev/course_work4-dev/app/dao/movie.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/dao/movie.py b/../course_work4-dev/course_work4-dev/app/dao/movie.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/dao/movie.py	
+++ /dev/null	
@@ -1,32 +0,0 @@
-from sqlalchemy import desc
-
-from app.dao.models.movie import Movie
-from constants import PAGE_LIMIT
-
-
-class MovieDAO:
-    def __init__(self, session):
-        self.session = session
-
-    def get_all(self, page_num=None, director=None, genre=None, status=None):
-        if page_num:
-            offset_rec = (int(page_num) - 1) * PAGE_LIMIT
-            page_limit = PAGE_LIMIT
-        else:
-            offset_rec = None
-            page_limit = None
-
-        req = self.session.query(Movie)
-        if status == 'new':
-            req = req.order_by(desc(Movie.year))
-
-        if director:
-            req = req.filter(Movie.director_id == director)
-
-        if genre:
-            req = req.filter(Movie.genre_id == genre)
-
-        return req.offset(offset_rec).limit(page_limit).all()
-
-    def get_one(self, mid):
-        return self.session.query(Movie).get(mid)
Index: ../Home_work_SQL_2/run.py
===================================================================
diff --git a/../Home_work_SQL_2/run.py b/../Home_work_SQL_2/run.py
deleted file mode 100644
--- a/../Home_work_SQL_2/run.py	
+++ /dev/null	
@@ -1,6 +0,0 @@
-from app import create_app
-
-if __name__ == '__main__':
-    app = create_app()
-    app.run(debug=True)
-
Index: ../lesson12_project_source_v3-master/.idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/../lesson12_project_source_v3-master/.idea/inspectionProfiles/profiles_settings.xml b/../lesson12_project_source_v3-master/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.idea/inspectionProfiles/profiles_settings.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: ../Home_work_SQL_2/.idea/dbnavigator.xml
===================================================================
diff --git a/../Home_work_SQL_2/.idea/dbnavigator.xml b/../Home_work_SQL_2/.idea/dbnavigator.xml
deleted file mode 100644
--- a/../Home_work_SQL_2/.idea/dbnavigator.xml	
+++ /dev/null	
@@ -1,460 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="DBNavigator.Project.DataEditorManager">
-    <record-view-column-sorting-type value="BY_INDEX" />
-    <value-preview-text-wrapping value="true" />
-    <value-preview-pinned value="false" />
-  </component>
-  <component name="DBNavigator.Project.DataExportManager">
-    <export-instructions>
-      <create-header value="true" />
-      <friendly-headers value="false" />
-      <quote-values-containing-separator value="true" />
-      <quote-all-values value="false" />
-      <value-separator value="" />
-      <file-name value="" />
-      <file-location value="" />
-      <scope value="GLOBAL" />
-      <destination value="FILE" />
-      <format value="EXCEL" />
-      <charset value="windows-1251" />
-      <charset value="windows-1251" />
-    </export-instructions>
-  </component>
-  <component name="DBNavigator.Project.DatabaseBrowserManager">
-    <autoscroll-to-editor value="false" />
-    <autoscroll-from-editor value="true" />
-    <show-object-properties value="true" />
-    <loaded-nodes />
-  </component>
-  <component name="DBNavigator.Project.DatabaseFileManager">
-    <open-files />
-  </component>
-  <component name="DBNavigator.Project.EditorStateManager">
-    <last-used-providers />
-  </component>
-  <component name="DBNavigator.Project.ExecutionManager">
-    <retain-sticky-names value="false" />
-  </component>
-  <component name="DBNavigator.Project.MethodExecutionManager">
-    <method-browser />
-    <execution-history>
-      <group-entries value="true" />
-      <execution-inputs />
-    </execution-history>
-    <argument-values-cache />
-  </component>
-  <component name="DBNavigator.Project.ObjectDependencyManager">
-    <last-used-dependency-type value="INCOMING" />
-  </component>
-  <component name="DBNavigator.Project.ObjectQuickFilterManager">
-    <last-used-operator value="EQUAL" />
-    <filters />
-  </component>
-  <component name="DBNavigator.Project.ParserDiagnosticsManager">
-    <diagnostics-history />
-  </component>
-  <component name="DBNavigator.Project.ScriptExecutionManager" clear-outputs="true">
-    <recently-used-interfaces />
-  </component>
-  <component name="DBNavigator.Project.Settings">
-    <connections />
-    <browser-settings>
-      <general>
-        <display-mode value="TABBED" />
-        <navigation-history-size value="100" />
-        <show-object-details value="false" />
-      </general>
-      <filters>
-        <object-type-filter>
-          <object-type name="SCHEMA" enabled="true" />
-          <object-type name="USER" enabled="true" />
-          <object-type name="ROLE" enabled="true" />
-          <object-type name="PRIVILEGE" enabled="true" />
-          <object-type name="CHARSET" enabled="true" />
-          <object-type name="TABLE" enabled="true" />
-          <object-type name="VIEW" enabled="true" />
-          <object-type name="MATERIALIZED_VIEW" enabled="true" />
-          <object-type name="NESTED_TABLE" enabled="true" />
-          <object-type name="COLUMN" enabled="true" />
-          <object-type name="INDEX" enabled="true" />
-          <object-type name="CONSTRAINT" enabled="true" />
-          <object-type name="DATASET_TRIGGER" enabled="true" />
-          <object-type name="DATABASE_TRIGGER" enabled="true" />
-          <object-type name="SYNONYM" enabled="true" />
-          <object-type name="SEQUENCE" enabled="true" />
-          <object-type name="PROCEDURE" enabled="true" />
-          <object-type name="FUNCTION" enabled="true" />
-          <object-type name="PACKAGE" enabled="true" />
-          <object-type name="TYPE" enabled="true" />
-          <object-type name="TYPE_ATTRIBUTE" enabled="true" />
-          <object-type name="ARGUMENT" enabled="true" />
-          <object-type name="DIMENSION" enabled="true" />
-          <object-type name="CLUSTER" enabled="true" />
-          <object-type name="DBLINK" enabled="true" />
-        </object-type-filter>
-      </filters>
-      <sorting>
-        <object-type name="COLUMN" sorting-type="NAME" />
-        <object-type name="FUNCTION" sorting-type="NAME" />
-        <object-type name="PROCEDURE" sorting-type="NAME" />
-        <object-type name="ARGUMENT" sorting-type="POSITION" />
-      </sorting>
-      <default-editors>
-        <object-type name="VIEW" editor-type="SELECTION" />
-        <object-type name="PACKAGE" editor-type="SELECTION" />
-        <object-type name="TYPE" editor-type="SELECTION" />
-      </default-editors>
-    </browser-settings>
-    <navigation-settings>
-      <lookup-filters>
-        <lookup-objects>
-          <object-type name="SCHEMA" enabled="true" />
-          <object-type name="USER" enabled="false" />
-          <object-type name="ROLE" enabled="false" />
-          <object-type name="PRIVILEGE" enabled="false" />
-          <object-type name="CHARSET" enabled="false" />
-          <object-type name="TABLE" enabled="true" />
-          <object-type name="VIEW" enabled="true" />
-          <object-type name="MATERIALIZED VIEW" enabled="true" />
-          <object-type name="INDEX" enabled="true" />
-          <object-type name="CONSTRAINT" enabled="true" />
-          <object-type name="DATASET TRIGGER" enabled="true" />
-          <object-type name="DATABASE TRIGGER" enabled="true" />
-          <object-type name="SYNONYM" enabled="false" />
-          <object-type name="SEQUENCE" enabled="true" />
-          <object-type name="PROCEDURE" enabled="true" />
-          <object-type name="FUNCTION" enabled="true" />
-          <object-type name="PACKAGE" enabled="true" />
-          <object-type name="TYPE" enabled="true" />
-          <object-type name="DIMENSION" enabled="false" />
-          <object-type name="CLUSTER" enabled="false" />
-          <object-type name="DBLINK" enabled="true" />
-        </lookup-objects>
-        <force-database-load value="false" />
-        <prompt-connection-selection value="true" />
-        <prompt-schema-selection value="true" />
-      </lookup-filters>
-    </navigation-settings>
-    <dataset-grid-settings>
-      <general>
-        <enable-zooming value="true" />
-        <enable-column-tooltip value="true" />
-      </general>
-      <sorting>
-        <nulls-first value="true" />
-        <max-sorting-columns value="4" />
-      </sorting>
-      <tracking-columns>
-        <columnNames value="" />
-        <visible value="true" />
-        <editable value="false" />
-      </tracking-columns>
-    </dataset-grid-settings>
-    <dataset-editor-settings>
-      <text-editor-popup>
-        <active value="false" />
-        <active-if-empty value="false" />
-        <data-length-threshold value="100" />
-        <popup-delay value="1000" />
-      </text-editor-popup>
-      <values-actions-popup>
-        <show-popup-button value="true" />
-        <element-count-threshold value="1000" />
-        <data-length-threshold value="250" />
-      </values-actions-popup>
-      <general>
-        <fetch-block-size value="100" />
-        <fetch-timeout value="30" />
-        <trim-whitespaces value="true" />
-        <convert-empty-strings-to-null value="true" />
-        <select-content-on-cell-edit value="true" />
-        <large-value-preview-active value="true" />
-      </general>
-      <filters>
-        <prompt-filter-dialog value="true" />
-        <default-filter-type value="BASIC" />
-      </filters>
-      <qualified-text-editor text-length-threshold="300">
-        <content-types>
-          <content-type name="Text" enabled="true" />
-          <content-type name="Properties" enabled="true" />
-          <content-type name="XML" enabled="true" />
-          <content-type name="DTD" enabled="true" />
-          <content-type name="HTML" enabled="true" />
-          <content-type name="XHTML" enabled="true" />
-          <content-type name="CSS" enabled="true" />
-          <content-type name="SQL" enabled="true" />
-          <content-type name="PL/SQL" enabled="true" />
-          <content-type name="JavaScript" enabled="true" />
-          <content-type name="JSON" enabled="true" />
-          <content-type name="JSON5" enabled="true" />
-          <content-type name="YAML" enabled="true" />
-        </content-types>
-      </qualified-text-editor>
-      <record-navigation>
-        <navigation-target value="VIEWER" />
-      </record-navigation>
-    </dataset-editor-settings>
-    <code-editor-settings>
-      <general>
-        <show-object-navigation-gutter value="false" />
-        <show-spec-declaration-navigation-gutter value="true" />
-        <enable-spellchecking value="true" />
-        <enable-reference-spellchecking value="false" />
-      </general>
-      <confirmations>
-        <save-changes value="false" />
-        <revert-changes value="true" />
-      </confirmations>
-    </code-editor-settings>
-    <code-completion-settings>
-      <filters>
-        <basic-filter>
-          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
-          <filter-element type="RESERVED_WORD" id="function" selected="true" />
-          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
-          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
-          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
-          <filter-element type="OBJECT" id="schema" selected="true" />
-          <filter-element type="OBJECT" id="role" selected="true" />
-          <filter-element type="OBJECT" id="user" selected="true" />
-          <filter-element type="OBJECT" id="privilege" selected="true" />
-          <user-schema>
-            <filter-element type="OBJECT" id="table" selected="true" />
-            <filter-element type="OBJECT" id="view" selected="true" />
-            <filter-element type="OBJECT" id="materialized view" selected="true" />
-            <filter-element type="OBJECT" id="index" selected="true" />
-            <filter-element type="OBJECT" id="constraint" selected="true" />
-            <filter-element type="OBJECT" id="trigger" selected="true" />
-            <filter-element type="OBJECT" id="synonym" selected="false" />
-            <filter-element type="OBJECT" id="sequence" selected="true" />
-            <filter-element type="OBJECT" id="procedure" selected="true" />
-            <filter-element type="OBJECT" id="function" selected="true" />
-            <filter-element type="OBJECT" id="package" selected="true" />
-            <filter-element type="OBJECT" id="type" selected="true" />
-            <filter-element type="OBJECT" id="dimension" selected="true" />
-            <filter-element type="OBJECT" id="cluster" selected="true" />
-            <filter-element type="OBJECT" id="dblink" selected="true" />
-          </user-schema>
-          <public-schema>
-            <filter-element type="OBJECT" id="table" selected="false" />
-            <filter-element type="OBJECT" id="view" selected="false" />
-            <filter-element type="OBJECT" id="materialized view" selected="false" />
-            <filter-element type="OBJECT" id="index" selected="false" />
-            <filter-element type="OBJECT" id="constraint" selected="false" />
-            <filter-element type="OBJECT" id="trigger" selected="false" />
-            <filter-element type="OBJECT" id="synonym" selected="false" />
-            <filter-element type="OBJECT" id="sequence" selected="false" />
-            <filter-element type="OBJECT" id="procedure" selected="false" />
-            <filter-element type="OBJECT" id="function" selected="false" />
-            <filter-element type="OBJECT" id="package" selected="false" />
-            <filter-element type="OBJECT" id="type" selected="false" />
-            <filter-element type="OBJECT" id="dimension" selected="false" />
-            <filter-element type="OBJECT" id="cluster" selected="false" />
-            <filter-element type="OBJECT" id="dblink" selected="false" />
-          </public-schema>
-          <any-schema>
-            <filter-element type="OBJECT" id="table" selected="true" />
-            <filter-element type="OBJECT" id="view" selected="true" />
-            <filter-element type="OBJECT" id="materialized view" selected="true" />
-            <filter-element type="OBJECT" id="index" selected="true" />
-            <filter-element type="OBJECT" id="constraint" selected="true" />
-            <filter-element type="OBJECT" id="trigger" selected="true" />
-            <filter-element type="OBJECT" id="synonym" selected="true" />
-            <filter-element type="OBJECT" id="sequence" selected="true" />
-            <filter-element type="OBJECT" id="procedure" selected="true" />
-            <filter-element type="OBJECT" id="function" selected="true" />
-            <filter-element type="OBJECT" id="package" selected="true" />
-            <filter-element type="OBJECT" id="type" selected="true" />
-            <filter-element type="OBJECT" id="dimension" selected="true" />
-            <filter-element type="OBJECT" id="cluster" selected="true" />
-            <filter-element type="OBJECT" id="dblink" selected="true" />
-          </any-schema>
-        </basic-filter>
-        <extended-filter>
-          <filter-element type="RESERVED_WORD" id="keyword" selected="true" />
-          <filter-element type="RESERVED_WORD" id="function" selected="true" />
-          <filter-element type="RESERVED_WORD" id="parameter" selected="true" />
-          <filter-element type="RESERVED_WORD" id="datatype" selected="true" />
-          <filter-element type="RESERVED_WORD" id="exception" selected="true" />
-          <filter-element type="OBJECT" id="schema" selected="true" />
-          <filter-element type="OBJECT" id="user" selected="true" />
-          <filter-element type="OBJECT" id="role" selected="true" />
-          <filter-element type="OBJECT" id="privilege" selected="true" />
-          <user-schema>
-            <filter-element type="OBJECT" id="table" selected="true" />
-            <filter-element type="OBJECT" id="view" selected="true" />
-            <filter-element type="OBJECT" id="materialized view" selected="true" />
-            <filter-element type="OBJECT" id="index" selected="true" />
-            <filter-element type="OBJECT" id="constraint" selected="true" />
-            <filter-element type="OBJECT" id="trigger" selected="true" />
-            <filter-element type="OBJECT" id="synonym" selected="true" />
-            <filter-element type="OBJECT" id="sequence" selected="true" />
-            <filter-element type="OBJECT" id="procedure" selected="true" />
-            <filter-element type="OBJECT" id="function" selected="true" />
-            <filter-element type="OBJECT" id="package" selected="true" />
-            <filter-element type="OBJECT" id="type" selected="true" />
-            <filter-element type="OBJECT" id="dimension" selected="true" />
-            <filter-element type="OBJECT" id="cluster" selected="true" />
-            <filter-element type="OBJECT" id="dblink" selected="true" />
-          </user-schema>
-          <public-schema>
-            <filter-element type="OBJECT" id="table" selected="true" />
-            <filter-element type="OBJECT" id="view" selected="true" />
-            <filter-element type="OBJECT" id="materialized view" selected="true" />
-            <filter-element type="OBJECT" id="index" selected="true" />
-            <filter-element type="OBJECT" id="constraint" selected="true" />
-            <filter-element type="OBJECT" id="trigger" selected="true" />
-            <filter-element type="OBJECT" id="synonym" selected="true" />
-            <filter-element type="OBJECT" id="sequence" selected="true" />
-            <filter-element type="OBJECT" id="procedure" selected="true" />
-            <filter-element type="OBJECT" id="function" selected="true" />
-            <filter-element type="OBJECT" id="package" selected="true" />
-            <filter-element type="OBJECT" id="type" selected="true" />
-            <filter-element type="OBJECT" id="dimension" selected="true" />
-            <filter-element type="OBJECT" id="cluster" selected="true" />
-            <filter-element type="OBJECT" id="dblink" selected="true" />
-          </public-schema>
-          <any-schema>
-            <filter-element type="OBJECT" id="table" selected="true" />
-            <filter-element type="OBJECT" id="view" selected="true" />
-            <filter-element type="OBJECT" id="materialized view" selected="true" />
-            <filter-element type="OBJECT" id="index" selected="true" />
-            <filter-element type="OBJECT" id="constraint" selected="true" />
-            <filter-element type="OBJECT" id="trigger" selected="true" />
-            <filter-element type="OBJECT" id="synonym" selected="true" />
-            <filter-element type="OBJECT" id="sequence" selected="true" />
-            <filter-element type="OBJECT" id="procedure" selected="true" />
-            <filter-element type="OBJECT" id="function" selected="true" />
-            <filter-element type="OBJECT" id="package" selected="true" />
-            <filter-element type="OBJECT" id="type" selected="true" />
-            <filter-element type="OBJECT" id="dimension" selected="true" />
-            <filter-element type="OBJECT" id="cluster" selected="true" />
-            <filter-element type="OBJECT" id="dblink" selected="true" />
-          </any-schema>
-        </extended-filter>
-      </filters>
-      <sorting enabled="true">
-        <sorting-element type="RESERVED_WORD" id="keyword" />
-        <sorting-element type="RESERVED_WORD" id="datatype" />
-        <sorting-element type="OBJECT" id="column" />
-        <sorting-element type="OBJECT" id="table" />
-        <sorting-element type="OBJECT" id="view" />
-        <sorting-element type="OBJECT" id="materialized view" />
-        <sorting-element type="OBJECT" id="index" />
-        <sorting-element type="OBJECT" id="constraint" />
-        <sorting-element type="OBJECT" id="trigger" />
-        <sorting-element type="OBJECT" id="synonym" />
-        <sorting-element type="OBJECT" id="sequence" />
-        <sorting-element type="OBJECT" id="procedure" />
-        <sorting-element type="OBJECT" id="function" />
-        <sorting-element type="OBJECT" id="package" />
-        <sorting-element type="OBJECT" id="type" />
-        <sorting-element type="OBJECT" id="dimension" />
-        <sorting-element type="OBJECT" id="cluster" />
-        <sorting-element type="OBJECT" id="dblink" />
-        <sorting-element type="OBJECT" id="schema" />
-        <sorting-element type="OBJECT" id="role" />
-        <sorting-element type="OBJECT" id="user" />
-        <sorting-element type="RESERVED_WORD" id="function" />
-        <sorting-element type="RESERVED_WORD" id="parameter" />
-      </sorting>
-      <format>
-        <enforce-code-style-case value="true" />
-      </format>
-    </code-completion-settings>
-    <execution-engine-settings>
-      <statement-execution>
-        <fetch-block-size value="100" />
-        <execution-timeout value="20" />
-        <debug-execution-timeout value="600" />
-        <focus-result value="false" />
-        <prompt-execution value="false" />
-      </statement-execution>
-      <script-execution>
-        <command-line-interfaces />
-        <execution-timeout value="300" />
-      </script-execution>
-      <method-execution>
-        <execution-timeout value="30" />
-        <debug-execution-timeout value="600" />
-        <parameter-history-size value="10" />
-      </method-execution>
-    </execution-engine-settings>
-    <operation-settings>
-      <transactions>
-        <uncommitted-changes>
-          <on-project-close value="ASK" />
-          <on-disconnect value="ASK" />
-          <on-autocommit-toggle value="ASK" />
-        </uncommitted-changes>
-        <multiple-uncommitted-changes>
-          <on-commit value="ASK" />
-          <on-rollback value="ASK" />
-        </multiple-uncommitted-changes>
-      </transactions>
-      <session-browser>
-        <disconnect-session value="ASK" />
-        <kill-session value="ASK" />
-        <reload-on-filter-change value="false" />
-      </session-browser>
-      <compiler>
-        <compile-type value="KEEP" />
-        <compile-dependencies value="ASK" />
-        <always-show-controls value="false" />
-      </compiler>
-      <debugger>
-        <debugger-type value="JDBC" />
-        <use-generic-runners value="true" />
-      </debugger>
-    </operation-settings>
-    <ddl-file-settings>
-      <extensions>
-        <mapping file-type-id="VIEW" extensions="vw" />
-        <mapping file-type-id="TRIGGER" extensions="trg" />
-        <mapping file-type-id="PROCEDURE" extensions="prc" />
-        <mapping file-type-id="FUNCTION" extensions="fnc" />
-        <mapping file-type-id="PACKAGE" extensions="pkg" />
-        <mapping file-type-id="PACKAGE_SPEC" extensions="pks" />
-        <mapping file-type-id="PACKAGE_BODY" extensions="pkb" />
-        <mapping file-type-id="TYPE" extensions="tpe" />
-        <mapping file-type-id="TYPE_SPEC" extensions="tps" />
-        <mapping file-type-id="TYPE_BODY" extensions="tpb" />
-      </extensions>
-      <general>
-        <lookup-ddl-files value="true" />
-        <create-ddl-files value="false" />
-        <synchronize-ddl-files value="true" />
-        <use-qualified-names value="false" />
-        <make-scripts-rerunnable value="true" />
-      </general>
-    </ddl-file-settings>
-    <general-settings>
-      <regional-settings>
-        <date-format value="MEDIUM" />
-        <number-format value="UNGROUPED" />
-        <locale value="SYSTEM_DEFAULT" />
-        <use-custom-formats value="false" />
-      </regional-settings>
-      <environment>
-        <environment-types>
-          <environment-type id="development" name="Development" description="Development environment" color="-2430209/-12296320" readonly-code="false" readonly-data="false" />
-          <environment-type id="integration" name="Integration" description="Integration environment" color="-2621494/-12163514" readonly-code="true" readonly-data="false" />
-          <environment-type id="production" name="Production" description="Productive environment" color="-11574/-10271420" readonly-code="true" readonly-data="true" />
-          <environment-type id="other" name="Other" description="" color="-1576/-10724543" readonly-code="false" readonly-data="false" />
-        </environment-types>
-        <visibility-settings>
-          <connection-tabs value="true" />
-          <dialog-headers value="true" />
-          <object-editor-tabs value="true" />
-          <script-editor-tabs value="false" />
-          <execution-result-tabs value="true" />
-        </visibility-settings>
-      </environment>
-    </general-settings>
-  </component>
-  <component name="DBNavigator.Project.StatementExecutionManager">
-    <execution-variables />
-  </component>
-</project>
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/static/style.css
===================================================================
diff --git a/../lesson12_project_source_v3-master/static/style.css b/../lesson12_project_source_v3-master/static/style.css
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/static/style.css	
+++ /dev/null	
@@ -1,60 +0,0 @@
-/* Селекторы по тегам */
-
-body {
-    font-family: arial;
-    font-size: 18px;
-}
-
-main {
-    margin: 32px auto;
-    width: 320px;
-}
-
-hr {
-    margin: 32px 0;
-}
-
-select {
-    padding: 7px 6px;
-    background-color: #ddd;
-    border:none;
-    border-radius: 4px;
-    font-size: 18px;
-}
-
-input[type=text] {
-    padding: 8px;
-    position: relative;
-    top: -2px;
-}
-
-textarea {
-    width: 100%;
-    margin-bottom: 16px;
-}
-
-input[type=file] {
-
-    margin-bottom: 16px;
-
-
-}
-
-a {
-    color: black;
-    font-size: 16px;
-}
-
-/* Селекторы по классам */
-
-.button {
-    background-color: #ddd;
-    padding: 8px 16px;
-    text-decoration: none;
-    color: black;
-    border:none;
-    border-radius: 4px;
-    font-size: 18px;
-}
-
-
Index: ../Home_work_SQL_2/app/models.py
===================================================================
diff --git a/../Home_work_SQL_2/app/models.py b/../Home_work_SQL_2/app/models.py
deleted file mode 100644
--- a/../Home_work_SQL_2/app/models.py	
+++ /dev/null	
@@ -1,86 +0,0 @@
-from app import db
-
-from sqlalchemy.orm import relationship
-
-from datetime import datetime
-
-
-class UserRole(db.Model):
-    __tablename__ = 'user_roles'
-
-    id = db.Column(db.Integer, primary_key=True)
-    name = db.Column(db.String(255), primary_key=True)
-
-
-class User(db.Model):
-    __tablename__ = 'users'
-
-    id = db.Column(db.Integer, primary_key=True)
-    first_name = db.Column(db.String(255), nullable=False)
-    last_name = db.Column(db.String(255), nullable=False)
-    age = db.Column(db.Integer)
-    email = db.Column(db.String(255), unique=True)
-    role_id = db.Column(db.Integer, db.ForeignKey('user_roles.id'))
-    phone = db.Column(db.String(16), unique=True)
-
-    role = relationship('UserRole')
-
-    def serialize(self):
-        return {
-            'id': self.id,
-            'first_name': self.first_name,
-            'last_name': self.last_name,
-            'age': self.age,
-            'email': self.email,
-            'role': self.role.name,
-            'phone': self.phone,
-        }
-
-
-class Offer(db.Model):
-    __tablename__ = 'offers'
-
-    id = db.Column(db.Integer, primary_key=True)
-    order_id = db.Column(db.Integer, db.ForeignKey('orders.id'))
-    executor_id = db.Column(db.Integer, db.ForeignKey('users.id'))
-
-    executor = relationship('User')
-    order = relationship('Order')
-
-    def serialize(self):
-        return {
-            'id': self.id,
-            'order_id': self.order_id,
-            'executor_id': self.executor_id,
-        }
-
-
-class Order(db.Model):
-    __tablename__ = 'orders'
-
-    id = db.Column(db.Integer, primary_key=True)
-    name = db.Column(db.String(255))
-    description = db.Column(db.String)
-    start_date = db.Column(db.Date)
-    end_date = db.Column(db.Date)
-    address = db.Column(db.String)
-    price = db.Column(db.Integer)
-    customer_id = db.Column(db.Integer, db.ForeignKey('users.id'))
-    executor_id = db.Column(db.Integer, db.ForeignKey('users.id'))
-
-    customer = relationship('User', foreign_keys='Order.customer_id')
-    executor = relationship('User', foreign_keys='Order.executor_id')
-
-    def serialize(self):
-        return {
-            'id': self.id,
-            'name': self.name,
-            'description': self.description,
-            'start_date': self.start_date.isoformat(),
-            'end_date': self.end_date.isoformat(),
-            'address': self.address,
-            'price': self.price,
-            'customer_id': self.customer_id,
-            'executor_id': self.executor_id,
-
-        }
Index: ../Home_work_SQL_2/fixtures/users.json
===================================================================
diff --git a/../Home_work_SQL_2/fixtures/users.json b/../Home_work_SQL_2/fixtures/users.json
deleted file mode 100644
--- a/../Home_work_SQL_2/fixtures/users.json	
+++ /dev/null	
@@ -1,272 +0,0 @@
-[
-  {
-    "id": 1,
-    "first_name": "Hudson",
-    "last_name": "Pauloh",
-    "age": 31,
-    "email": "elliot16@mymail.com",
-    "role_id": 2,
-    "phone": "6197021684"
-  },
-  {
-    "id": 2,
-    "first_name": "George",
-    "last_name": "Matter",
-    "age": 41,
-    "email": "lawton46@mymail.com",
-    "role_id": 1,
-    "phone": "8314786677"
-  },
-  {
-    "id": 3,
-    "first_name": "Grant",
-    "last_name": "Traviser",
-    "age": 23,
-    "email": "tobias45@mymail.com",
-    "role_id": 2,
-    "phone": "9528815998"
-  },
-  {
-    "id": 4,
-    "first_name": "Malcolm",
-    "last_name": "Douglasoh",
-    "age": 28,
-    "email": "daniel37@mymail.com",
-    "role_id": 2,
-    "phone": "6428998684"
-  },
-  {
-    "id": 5,
-    "first_name": "Lester",
-    "last_name": "Archibaldoh",
-    "age": 20,
-    "email": "joshua18@mymail.com",
-    "role_id": 1,
-    "phone": "8825887253"
-  },
-  {
-    "id": 6,
-    "first_name": "Gareth",
-    "last_name": "Tobiaser",
-    "age": 27,
-    "email": "barnabe18@mymail.com",
-    "role_id": 2,
-    "phone": "8254630383"
-  },
-  {
-    "id": 7,
-    "first_name": "Vivian",
-    "last_name": "Philipik",
-    "age": 49,
-    "email": "jaime46@mymail.com",
-    "role_id": 2,
-    "phone": "9884423362"
-  },
-  {
-    "id": 8,
-    "first_name": "Nate",
-    "last_name": "Travisik",
-    "age": 18,
-    "email": "nate46@mymail.com",
-    "role_id": 1,
-    "phone": "8353350197"
-  },
-  {
-    "id": 9,
-    "first_name": "Norman",
-    "last_name": "Larryoh",
-    "age": 37,
-    "email": "shahaf06@mymail.com",
-    "role_id": 1,
-    "phone": "6448371821"
-  },
-  {
-    "id": 10,
-    "first_name": "George",
-    "last_name": "Emiloh",
-    "age": 49,
-    "email": "grant35@mymail.com",
-    "role_id": 1,
-    "phone": "8872495923"
-  },
-  {
-    "id": 11,
-    "first_name": "Graham",
-    "last_name": "Reginalder",
-    "age": 20,
-    "email": "george38@mymail.com",
-    "role_id": 1,
-    "phone": "7356168167"
-  },
-  {
-    "id": 12,
-    "first_name": "Malcolm",
-    "last_name": "Jameser",
-    "age": 22,
-    "email": "graham27@mymail.com",
-    "role_id": 1,
-    "phone": "8967033901"
-  },
-  {
-    "id": 13,
-    "first_name": "Marvin",
-    "last_name": "Austenoh",
-    "age": 19,
-    "email": "nicholas46@mymail.com",
-    "role_id": 1,
-    "phone": "6723331776"
-  },
-  {
-    "id": 14,
-    "first_name": "Jack",
-    "last_name": "Normaner",
-    "age": 32,
-    "email": "myron25@mymail.com",
-    "role_id": 1,
-    "phone": "7490416454"
-  },
-  {
-    "id": 15,
-    "first_name": "Travis",
-    "last_name": "Chanceer",
-    "age": 20,
-    "email": "kurt17@mymail.com",
-    "role_id": 2,
-    "phone": "9491120005"
-  },
-  {
-    "id": 16,
-    "first_name": "Neil",
-    "last_name": "Ronaldoh",
-    "age": 43,
-    "email": "john36@mymail.com",
-    "role_id": 2,
-    "phone": "8913865074"
-  },
-  {
-    "id": 17,
-    "first_name": "Shahaf",
-    "last_name": "Larryoh",
-    "age": 33,
-    "email": "ebenezer08@mymail.com",
-    "role_id": 2,
-    "phone": "6514816015"
-  },
-  {
-    "id": 18,
-    "first_name": "Wayne",
-    "last_name": "Markik",
-    "age": 43,
-    "email": "larry37@mymail.com",
-    "role_id": 1,
-    "phone": "6496155163"
-  },
-  {
-    "id": 19,
-    "first_name": "Dougie",
-    "last_name": "Adrianik",
-    "age": 23,
-    "email": "vincent46@mymail.com",
-    "role_id": 2,
-    "phone": "9965723667"
-  },
-  {
-    "id": 20,
-    "first_name": "Vincent",
-    "last_name": "Davider",
-    "age": 47,
-    "email": "cuthbert36@mymail.com",
-    "role_id": 1,
-    "phone": "7125872211"
-  },
-  {
-    "id": 21,
-    "first_name": "Addison",
-    "last_name": "Reginaldik",
-    "age": 48,
-    "email": "reginald25@mymail.com",
-    "role_id": 1,
-    "phone": "9963171227"
-  },
-  {
-    "id": 22,
-    "first_name": "Arthur",
-    "last_name": "Chanceik",
-    "age": 23,
-    "email": "stephen25@mymail.com",
-    "role_id": 1,
-    "phone": "6786170626"
-  },
-  {
-    "id": 23,
-    "first_name": "Earl",
-    "last_name": "Frankliner",
-    "age": 40,
-    "email": "lawton47@mymail.com",
-    "role_id": 1,
-    "phone": "7851277139"
-  },
-  {
-    "id": 24,
-    "first_name": "Marshall",
-    "last_name": "Arloer",
-    "age": 43,
-    "email": "floyd36@mymail.com",
-    "role_id": 1,
-    "phone": "6442333628"
-  },
-  {
-    "id": 25,
-    "first_name": "Mark",
-    "last_name": "Nicholasoh",
-    "age": 33,
-    "email": "nicolas35@mymail.com",
-    "role_id": 2,
-    "phone": "8143159413"
-  },
-  {
-    "id": 26,
-    "first_name": "Edgar",
-    "last_name": "Arthurik",
-    "age": 18,
-    "email": "vincent45@mymail.com",
-    "role_id": 1,
-    "phone": "6159310195"
-  },
-  {
-    "id": 27,
-    "first_name": "Travis",
-    "last_name": "Pelegoh",
-    "age": 24,
-    "email": "jeffrey05@mymail.com",
-    "role_id": 1,
-    "phone": "9300837797"
-  },
-  {
-    "id": 28,
-    "first_name": "Nate",
-    "last_name": "Albertoh",
-    "age": 30,
-    "email": "peleg36@mymail.com",
-    "role_id": 1,
-    "phone": "6158921977"
-  },
-  {
-    "id": 29,
-    "first_name": "Cardew",
-    "last_name": "Hughik",
-    "age": 28,
-    "email": "jolyon37@mymail.com",
-    "role_id": 1,
-    "phone": "6787970230"
-  },
-  {
-    "id": 30,
-    "first_name": "Graham",
-    "last_name": "Joeyoh",
-    "age": 28,
-    "email": "myron26@mymail.com",
-    "role_id": 1,
-    "phone": "6962652739"
-  }
-]
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/main/templates/index.html
===================================================================
diff --git a/../lesson12_project_source_v3-master/main/templates/index.html b/../lesson12_project_source_v3-master/main/templates/index.html
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/main/templates/index.html	
+++ /dev/null	
@@ -1,26 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <title>Главная страница</title>
-    <link rel="stylesheet" href="../static/style.css">
-</head>
-<body>
-
-<main>
-
-    <h1>Поиск постов</h1>
-
-    <form action="/search" method="get">
-        <p>По вхождению слова</p>
-        <input type="text" name="s">
-        <input type="submit" value="Найти" class="button">
-    </form>
-
-    <hr>
-
-    <a href="/post" class="button">Добавить пост</a>
-
-</main>
-</body>
-</html>
Index: ../lesson12_project_source_v3-master/main/templates/post_list.html
===================================================================
diff --git a/../lesson12_project_source_v3-master/main/templates/post_list.html b/../lesson12_project_source_v3-master/main/templates/post_list.html
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/main/templates/post_list.html	
+++ /dev/null	
@@ -1,28 +0,0 @@
-<!DOCTYPE html>
-<html lang="ru">
-<head>
-    <meta charset="UTF-8">
-    <title>Все посты найденные по запросу {{ s }}</title>
-    <link rel="stylesheet" href="../static/style.css">
-</head>
-<body>
-<main>
-
-    <a href="/" class="link">Назад</a>
-
-    <h1>Посты по запросу {{ s }}</h1>
-
-    {% for post in posts %}
-    <div class="post">
-        <img src="{{ post.pic }}" width="100%" alt="">
-        <p>{{post.content}} </p>
-    </div>
-    <hr>
-    {% endfor %}
-
-
-    <a href="/post" class="button">Добавить пост</a>
-
-</main>
-</body>
-</html>
Index: ../course_work4-dev/course_work4-dev/app/services/user.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/user.py b/../course_work4-dev/course_work4-dev/app/services/user.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/user.py	
+++ /dev/null	
@@ -1,52 +0,0 @@
-from app.dao.user import UserDAO
-import jwt
-from hashlib import pbkdf2_hmac
-from constants import JWT_ALGORITHM, JWT_SECRET, PWD_ITERATIONS, PWD_SALT
-import base64
-import hmac
-from flask import abort
-
-
-class UserService:
-    def __init__(self, dao: UserDAO):
-        self.dao = dao
-
-    def get_one(self, uid):
-        return self.dao.get_one(uid)
-
-    def get_by_email(self, email):
-        return self.dao.get_by_email(email).id
-
-    def patch(self, uid, user_data):
-        return self.dao.patch(uid, user_data)
-
-    def get_id_by_token(self, data_headers):
-        token = data_headers['Authorization'].split('Bearer ')[-1]
-        data = jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
-        uid = data['id']
-        return uid
-
-    def put(self, uid, user_data):
-        user = self.get_one(uid)
-        if not self.compare_passwords(user.password, user_data['old_password']):
-            abort(400)
-        user.password = self.get_hash(user_data['new_password'])
-        self.dao.put(user)
-
-    def get_hash(self, password):
-        hash_digest = pbkdf2_hmac(
-            'sha256',
-            password.encode('utf-8'),
-            PWD_SALT,
-            PWD_ITERATIONS
-        )
-        return base64.b64encode(hash_digest)
-
-    def compare_passwords(self, password_hashed, password) -> bool:
-        digest_decoded = base64.b64decode(password_hashed)
-        digest_hashed = pbkdf2_hmac('sha256',
-                                    password.encode('utf-8'),
-                                    PWD_SALT,
-                                    PWD_ITERATIONS)
-
-        return hmac.compare_digest(digest_decoded, digest_hashed)
\ No newline at end of file
Index: ../lesson12_project_source_v3-master/exceptions.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/exceptions.py b/../lesson12_project_source_v3-master/exceptions.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/exceptions.py	
+++ /dev/null	
@@ -1,5 +0,0 @@
-class DataJsonError(Exception):
-    pass
-
-class WrongImgType(Exception):
-    pass
Index: ../lesson12_project_source_v3-master/config.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/config.py b/../lesson12_project_source_v3-master/config.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/config.py	
+++ /dev/null	
@@ -1,2 +0,0 @@
-POST_PATH = "posts.json"
-UPLOAD_FOLDER = "uploads/images"
\ No newline at end of file
Index: ../course_work4-dev/course_work4-dev/app/services/favourite_movie.py
===================================================================
diff --git a/../course_work4-dev/course_work4-dev/app/services/favourite_movie.py b/../course_work4-dev/course_work4-dev/app/services/favourite_movie.py
deleted file mode 100644
--- a/../course_work4-dev/course_work4-dev/app/services/favourite_movie.py	
+++ /dev/null	
@@ -1,31 +0,0 @@
-from app.dao.models.user_movie_rel import user_movie_table
-from setup_db import db
-import jwt
-from constants import JWT_SECRET, JWT_ALGORITHM
-from sqlalchemy import select
-
-
-class FavouriteService:
-    def __init__(self):
-        pass
-
-    def get_one(self, uid):
-        return self.get_one(uid)
-
-    def get_by_id(self, uid):
-        stmt = select(user_movie_table.c.movie_id).where(user_movie_table.c.user_id == uid)
-        favourite_movies = db.session.execute(stmt).fetchall()
-        return favourite_movies
-
-
-    def post(self, user_id, movie_id):
-        pass
-
-    def delete(self):
-        pass
-
-    def get_id_by_token(self, data_headers):
-        token = data_headers['Authorization'].split('Bearer ')[-1]
-        data = jwt.decode(token, JWT_SECRET, algorithms=[JWT_ALGORITHM])
-        uid = data['id']
-        return uid
Index: ../lesson12_project_source_v3-master/.gitignore
===================================================================
diff --git a/../lesson12_project_source_v3-master/.gitignore b/../lesson12_project_source_v3-master/.gitignore
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/.gitignore	
+++ /dev/null	
@@ -1,1 +0,0 @@
-/venv/
Index: ../lesson12_project_source_v3-master/loader/views.py
===================================================================
diff --git a/../lesson12_project_source_v3-master/loader/views.py b/../lesson12_project_source_v3-master/loader/views.py
deleted file mode 100644
--- a/../lesson12_project_source_v3-master/loader/views.py	
+++ /dev/null	
@@ -1,36 +0,0 @@
-from os import abort
-
-from flask import Blueprint, render_template, request
-from loader.utils import save_picture, add_post
-import logging
-from loader.utils import *
-from main import utils
-from config import POST_PATH
-
-loader_blueprint = Blueprint("loader_blueprint", __name__, template_folder="templates")
-logging.basicConfig(filename="logger.log", level=logging.INFO)
-
-
-@loader_blueprint.route("/post", methods=["GET"])
-def create_new_post_page():
-    return render_template("post_form.html")
-
-
-@loader_blueprint.route("/post", methods=["POST"])
-def create_new_post_by_user():
-    picture = request.files.get("picture")
-    content = request.form.get("content")
-    if not picture or not content:
-        logging.info("Данные не загружены, отсутсвует часть данных")
-        return "Отсутствует часть данных"
-
-    posts = utils.load_json_data(POST_PATH)
-
-    try:
-        new_post = {"pic": save_picture(picture), "content": content}
-    except WrongImgType:
-        abort(400)
-
-    add_post(posts, new_post)
-
-    return render_template("post_uploaded.html", new_post=new_post)
Index: ../Тесты по пройденому материалу/.idea/Тесты по пройденому материалу.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Тесты по пройденому материалу/.idea/Тесты по пройденому материалу.iml b/../Тесты по пройденому материалу/.idea/Тесты по пройденому материалу.iml
new file mode 100644
--- /dev/null	
+++ b/../Тесты по пройденому материалу/.idea/Тесты по пройденому материалу.iml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Шпаргалки по пройденому материалу/Подсказки_по_урокам_SQL/.idea/Подсказки_по_урокам_SQL.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Шпаргалки по пройденому материалу/Подсказки_по_урокам_SQL/.idea/Подсказки_по_урокам_SQL.iml b/../Шпаргалки по пройденому материалу/Подсказки_по_урокам_SQL/.idea/Подсказки_по_урокам_SQL.iml
new file mode 100644
--- /dev/null	
+++ b/../Шпаргалки по пройденому материалу/Подсказки_по_урокам_SQL/.idea/Подсказки_по_урокам_SQL.iml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Шпаргалки по пройденому материалу/.idea/Шпаргалки по пройденому материалу.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Шпаргалки по пройденому материалу/.idea/Шпаргалки по пройденому материалу.iml b/../Шпаргалки по пройденому материалу/.idea/Шпаргалки по пройденому материалу.iml
new file mode 100644
--- /dev/null	
+++ b/../Шпаргалки по пройденому материалу/.idea/Шпаргалки по пройденому материалу.iml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/../course_work4-dev/course_work4-dev/app/services/__init__.py b/../course_work4-dev/course_work4-dev/app/services/__init__.py
deleted file mode 100644
diff --git a/../course_work4-dev/course_work4-dev/app/views/__init__.py b/../course_work4-dev/course_work4-dev/app/views/__init__.py
deleted file mode 100644
diff --git a/../course_work4-dev/course_work4-dev/app/__init__.py b/../course_work4-dev/course_work4-dev/app/__init__.py
deleted file mode 100644
diff --git a/../course_work4-dev/course_work4-dev/app/dao/__init__.py b/../course_work4-dev/course_work4-dev/app/dao/__init__.py
deleted file mode 100644
diff --git a/../lesson12_project_source_v3-master/main/__init__.py b/../lesson12_project_source_v3-master/main/__init__.py
deleted file mode 100644
diff --git a/../course_work4-dev/course_work4-dev/app/dao/models/__init__.py b/../course_work4-dev/course_work4-dev/app/dao/models/__init__.py
deleted file mode 100644
diff --git a/../lesson12_project_source_v3-master/loader/__init__.py b/../lesson12_project_source_v3-master/loader/__init__.py
deleted file mode 100644
